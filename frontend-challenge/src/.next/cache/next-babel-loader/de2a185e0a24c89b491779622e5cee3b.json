{"ast":null,"code":"var _jsxFileName = \"/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/HomePage/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport FilterMenu from '../../components/FilterMenu/FilterMenu';\nimport BottomBar from '../../components/BottomBar/BottomBar';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_ALL_PROGRAMS } from '../../graphQL/queries';\nimport ProgramContainer from '../../components/ProgramContainer/ProgramContainer';\n\nconst HomePage = () => {\n  const itemsPerPage = 10;\n  const {\n    0: page,\n    1: setPage\n  } = useState(1); // const { loading: loadingCount, data: count } = useQuery(GET_COUNT);\n\n  const {\n    loading: loadingPrograms,\n    data: programs\n  } = useQuery(GET_ALL_PROGRAMS, {\n    variables: {\n      offset: (page - 1) * itemsPerPage,\n      limit: itemsPerPage\n    }\n  });\n  if (loadingPrograms) return null;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(FilterMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), __jsx(ProgramContainer, {\n    count: 129,\n    loading: loadingPrograms,\n    programs: programs,\n    term: null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), __jsx(BottomBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/HomePage/index.tsx"],"names":["React","useState","Layout","FilterMenu","BottomBar","useQuery","GET_ALL_PROGRAMS","ProgramContainer","HomePage","itemsPerPage","page","setPage","loading","loadingPrograms","data","programs","variables","offset","limit"],"mappings":";;AAAA,OAAOA,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAAuBC,QAAvB,QAAuC,qBAAvC;AACA,SAAoBC,gBAApB,QAA4C,uBAA5C;AAGA,OAAOC,gBAAP,MAA6B,oDAA7B;;AAWA,MAAMC,QAA0C,GAAG,MAAM;AACvD,QAAMC,YAAY,GAAG,EAArB;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBV,QAAQ,CAAC,CAAD,CAAhC,CAFuD,CAIxD;;AACC,QAAM;AAAEW,IAAAA,OAAO,EAAEC,eAAX;AAA4BC,IAAAA,IAAI,EAAEC;AAAlC,MAA+CV,QAAQ,CAC3DC,gBAD2D,EACzC;AAChBU,IAAAA,SAAS,EAAE;AACTC,MAAAA,MAAM,EAAE,CAACP,IAAI,GAAC,CAAN,IAAWD,YADV;AAETS,MAAAA,KAAK,EAAET;AAFE;AADK,GADyC,CAA7D;AAWE,MAAGI,eAAH,EAAoB,OAAO,IAAP;AAEtB,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEI,MAAC,gBAAD;AAAmB,IAAA,KAAK,EAAE,GAA1B;AAA+B,IAAA,OAAO,EAAEA,eAAxC;AAAyD,IAAA,QAAQ,EAAEE,QAAnE;AAA6E,IAAA,IAAI,EAAE,IAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CAzBD;;AA2BA,eAAeP,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Layout from '../../components/Layout/Layout';\nimport FilterMenu from '../../components/FilterMenu/FilterMenu';\nimport BottomBar from '../../components/BottomBar/BottomBar';\nimport { useLazyQuery, useQuery } from '@apollo/react-hooks';\nimport { GET_COUNT, GET_ALL_PROGRAMS } from '../../graphQL/queries';\nimport { Spinner } from '../../components/Spinner/Spinner';\n\nimport ProgramContainer from '../../components/ProgramContainer/ProgramContainer';\n\ntype HomePageProps = {\n  getInitialProps: Function;\n};\n\ninterface HomePageInterface<HomePageProps> extends React.FC<HomePageProps> {\n  getInitialProps?: (ctx: any) => Promise<any>;\n}\n\n\nconst HomePage: HomePageInterface<HomePageProps> = () => {\n  const itemsPerPage = 10;\n  const [page, setPage] = useState(1);\n\n // const { loading: loadingCount, data: count } = useQuery(GET_COUNT);\n  const { loading: loadingPrograms, data: programs } = useQuery(\n    GET_ALL_PROGRAMS, {\n      variables: {\n        offset: (page-1) * itemsPerPage,\n        limit: itemsPerPage\n      }\n    }\n  );\n\n\n\n    if(loadingPrograms) return null\n\n  return (\n    <Layout>\n      <FilterMenu />\n        <ProgramContainer  count={129} loading={loadingPrograms} programs={programs} term={null} />\n      <BottomBar />\n    </Layout>\n  );\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}