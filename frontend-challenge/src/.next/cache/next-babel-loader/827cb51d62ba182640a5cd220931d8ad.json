{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { getDataFromTree } from '@apollo/react-ssr';\nimport Head from 'next/head';\nimport React from 'react';\nimport initApollo from '../services/apollo.service';\nexport default (function (App) {\n  var _class, _temp;\n\n  return _temp = _class =\n  /*#__PURE__*/\n  function (_React$Component) {\n    _inherits(Apollo, _React$Component);\n\n    _createClass(Apollo, null, [{\n      key: \"getInitialProps\",\n      value: function getInitialProps(ctx) {\n        var AppTree, apollo, appProps, apolloState;\n        return _regeneratorRuntime.async(function getInitialProps$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                AppTree = ctx.AppTree;\n                apollo = initApollo();\n\n                if (ctx.ctx) {\n                  ctx.ctx.apolloClient = apollo;\n                }\n\n                appProps = {};\n\n                if (!App.getInitialProps) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 7;\n                return _regeneratorRuntime.awrap(App.getInitialProps(ctx));\n\n              case 7:\n                appProps = _context.sent;\n\n              case 8:\n                if (!false) {\n                  _context.next = 18;\n                  break;\n                }\n\n                _context.prev = 9;\n                _context.next = 12;\n                return _regeneratorRuntime.awrap(getDataFromTree(__jsx(AppTree, _extends({}, appProps, {\n                  apolloClient: apollo\n                }))));\n\n              case 12:\n                _context.next = 17;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](9);\n                // Prevent Apollo Client GraphQL errors from crashing SSR.\n                // Handle them in components via the data.error prop:\n                // https://www.apollographql.com/docs/react/api/react-apollo.html#graphql-query-data-error\n                console.error('Error while running `getDataFromTree`', _context.t0);\n\n              case 17:\n                // getDataFromTree does not call componentWillUnmount\n                // head side effect therefore need to be cleared manually\n                Head.rewind();\n\n              case 18:\n                // Extract query data from the Apollo store\n                apolloState = apollo.cache.extract();\n                return _context.abrupt(\"return\", _objectSpread({}, appProps, {\n                  apolloState: apolloState\n                }));\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[9, 14]]);\n      }\n    }]);\n\n    function Apollo(props) {\n      var _this;\n\n      _classCallCheck(this, Apollo);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(Apollo).call(this, props));\n      _this.apolloClient = initApollo(props.apolloState);\n      return _this;\n    }\n\n    _createClass(Apollo, [{\n      key: \"render\",\n      value: function render() {\n        return __jsx(App, _extends({\n          apolloClient: this.apolloClient\n        }, this.props));\n      }\n    }]);\n\n    return Apollo;\n  }(React.Component), _defineProperty(_class, \"displayName\", 'withApollo(App)'), _temp;\n});","map":null,"metadata":{},"sourceType":"module"}