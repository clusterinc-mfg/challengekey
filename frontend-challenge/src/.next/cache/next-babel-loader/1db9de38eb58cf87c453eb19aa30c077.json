{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/bradtudor/Documents/interview_challenges/frontend-challenge key/src/pages/_app.tsx\";\nvar __jsx = React.createElement;\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/styles';\nimport BaseApp from 'next/app';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport withApolloClient from '../hocs/withApolloClient';\nimport configureStore from '../redux/configureStore';\nimport { theme, GlobalStyle } from '../theme/themes/base';\nimport muiTheme from '../theme/themes/muiTheme';\n\nclass App extends BaseApp {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      apolloClient,\n      store\n    } = this.props;\n    return __jsx(ApolloProvider, {\n      client: apolloClient,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(MuiThemeProvider, {\n      theme: muiTheme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(ThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, __jsx(GlobalStyle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default withApolloClient(configureStore(App));","map":{"version":3,"sources":["/Users/bradtudor/Documents/interview_challenges/frontend-challenge key/src/pages/_app.tsx"],"names":["ApolloProvider","ThemeProvider","MuiThemeProvider","BaseApp","React","Provider","withApolloClient","configureStore","theme","GlobalStyle","muiTheme","App","getInitialProps","Component","ctx","pageProps","render","apolloClient","store","props"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,qBAA/B;AACA,SAASC,aAAa,IAAIC,gBAA1B,QAAkD,qBAAlD;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASJ,aAAT,QAA8B,mBAA9B;AAEA,OAAOK,gBAAP,MAA6B,0BAA7B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,sBAAnC;AACA,OAAOC,QAAP,MAAqB,0BAArB;;AASA,MAAMC,GAAN,SAAkBR,OAAlB,CAAoC;AAClC,eAAoBS,eAApB,CAAoC;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAApC,EAA6D;AAC3D,QAAIC,SAAS,GAAG,EAAhB;;AAEA,QAAIF,SAAS,CAACD,eAAd,EAA+B;AAC7BG,MAAAA,SAAS,GAAG,MAAMF,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAAlB;AACD;;AAED,WAAO;AAAEC,MAAAA;AAAF,KAAP;AACD;;AAEMC,EAAAA,MAAP,GAAgB;AACd,UAAM;AAAEH,MAAAA,SAAF;AAAaE,MAAAA,SAAb;AAAwBE,MAAAA,YAAxB;AAAsCC,MAAAA;AAAtC,QAAgD,KAAKC,KAA3D;AAEA,WACE,MAAC,cAAD;AAAgB,MAAA,MAAM,EAAEF,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AAAkB,MAAA,KAAK,EAAER,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,aAAD;AAAe,MAAA,KAAK,EAAEF,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,SAAD,eAAeO,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,CADF,CADF,CADF,CADF,CADF;AAcD;;AA5BiC;;AA+BpC,eAAeT,gBAAgB,CAACC,cAAc,CAACI,GAAD,CAAf,CAA/B","sourcesContent":["import { ApolloProvider } from '@apollo/react-hooks';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/styles';\nimport BaseApp from 'next/app';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\n\nimport withApolloClient from '../hocs/withApolloClient';\nimport configureStore from '../redux/configureStore';\nimport { theme, GlobalStyle } from '../theme/themes/base';\nimport muiTheme from '../theme/themes/muiTheme';\n\ninterface AppProps {\n  Component: any;\n  pageProps: any;\n  store: any;\n  apolloClient: any;\n}\n\nclass App extends BaseApp<AppProps> {\n  public static async getInitialProps({ Component, ctx }: any) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return { pageProps };\n  }\n\n  public render() {\n    const { Component, pageProps, apolloClient, store } = this.props;\n\n    return (\n      <ApolloProvider client={apolloClient}>\n        <Provider store={store}>\n          <MuiThemeProvider theme={muiTheme}>\n            <ThemeProvider theme={theme}>\n              <div>\n                <GlobalStyle />\n                <Component {...pageProps} />\n              </div>\n            </ThemeProvider>\n          </MuiThemeProvider>\n        </Provider>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default withApolloClient(configureStore(App));\n"]},"metadata":{},"sourceType":"module"}