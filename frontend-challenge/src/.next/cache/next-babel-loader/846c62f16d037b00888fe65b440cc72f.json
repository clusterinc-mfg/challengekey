{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/brad/Documents/Project/frontend-challenge/src/pages/_app.tsx\";\nvar __jsx = React.createElement;\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/styles';\nimport BaseApp from 'next/app';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport '../localization/i18n';\nimport withApolloClient from '../hocs/withApolloClient';\nimport configureStore from '../store/configureStore';\nimport { theme, GlobalStyle } from '../theme/themes/base';\nimport muiTheme from '../theme/themes/muiTheme';\n\nvar App =\n/*#__PURE__*/\nfunction (_BaseApp) {\n  _inherits(App, _BaseApp);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          apolloClient = _this$props.apolloClient,\n          store = _this$props.store;\n      return __jsx(ApolloProvider, {\n        client: apolloClient,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, __jsx(Provider, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, __jsx(MuiThemeProvider, {\n        theme: muiTheme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, __jsx(ThemeProvider, {\n        theme: theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, __jsx(GlobalStyle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), __jsx(Component, _extends({}, pageProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })))))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var Component, ctx, pageProps;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Component = _ref.Component, ctx = _ref.ctx;\n              pageProps = {};\n\n              if (!Component.getInitialProps) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Component.getInitialProps(ctx));\n\n            case 5:\n              pageProps = _context.sent;\n\n            case 6:\n              return _context.abrupt(\"return\", {\n                pageProps: pageProps\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return App;\n}(BaseApp);\n\nexport default withApolloClient(configureStore(App));","map":{"version":3,"sources":["/Users/brad/Documents/Project/frontend-challenge/src/pages/_app.tsx"],"names":["ApolloProvider","ThemeProvider","MuiThemeProvider","BaseApp","React","Provider","withApolloClient","configureStore","theme","GlobalStyle","muiTheme","App","props","Component","pageProps","apolloClient","store","ctx","getInitialProps"],"mappings":";;;;;;;;;AAAA,SAASA,cAAT,QAA+B,qBAA/B;AACA,SAASC,aAAa,IAAIC,gBAA1B,QAAkD,qBAAlD;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASJ,aAAT,QAA8B,mBAA9B;AAEA,OAAO,sBAAP;AAEA,OAAOK,gBAAP,MAA6B,0BAA7B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,sBAAnC;AACA,OAAOC,QAAP,MAAqB,0BAArB;;IASMC,G;;;;;;;;;;;;;6BAWY;AAAA,wBACwC,KAAKC,KAD7C;AAAA,UACNC,SADM,eACNA,SADM;AAAA,UACKC,SADL,eACKA,SADL;AAAA,UACgBC,YADhB,eACgBA,YADhB;AAAA,UAC8BC,KAD9B,eAC8BA,KAD9B;AAGd,aACE,MAAC,cAAD;AAAgB,QAAA,MAAM,EAAED,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,QAAD;AAAU,QAAA,KAAK,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEN,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,aAAD;AAAe,QAAA,KAAK,EAAEF,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,MAAC,SAAD,eAAeM,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CADF,CADF,CADF,CADF,CADF;AAcD;;;;;;;;;AA3BqCD,cAAAA,S,QAAAA,S,EAAWI,G,QAAAA,G;AAC3CH,cAAAA,S,GAAY,E;;mBAEZD,SAAS,CAACK,e;;;;;;+CACML,SAAS,CAACK,eAAV,CAA0BD,GAA1B,C;;;AAAlBH,cAAAA,S;;;+CAGK;AAAEA,gBAAAA,SAAS,EAATA;AAAF,e;;;;;;;;;;;;EAROX,O;;AA+BlB,eAAeG,gBAAgB,CAACC,cAAc,CAACI,GAAD,CAAf,CAA/B","sourcesContent":["import { ApolloProvider } from '@apollo/react-hooks';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/styles';\nimport BaseApp from 'next/app';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\n\nimport '../localization/i18n';\n\nimport withApolloClient from '../hocs/withApolloClient';\nimport configureStore from '../store/configureStore';\nimport { theme, GlobalStyle } from '../theme/themes/base';\nimport muiTheme from '../theme/themes/muiTheme';\n\ninterface AppProps {\n  Component: any;\n  pageProps: any;\n  store: any;\n  apolloClient: any;\n}\n\nclass App extends BaseApp<AppProps> {\n  public static async getInitialProps({ Component, ctx }: any) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return { pageProps };\n  }\n\n  public render() {\n    const { Component, pageProps, apolloClient, store } = this.props;\n\n    return (\n      <ApolloProvider client={apolloClient}>\n        <Provider store={store}>\n          <MuiThemeProvider theme={muiTheme}>\n            <ThemeProvider theme={theme}>\n              <div>\n                <GlobalStyle />\n                <Component {...pageProps} />\n              </div>\n            </ThemeProvider>\n          </MuiThemeProvider>\n        </Provider>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default withApolloClient(configureStore(App));\n"]},"metadata":{},"sourceType":"module"}