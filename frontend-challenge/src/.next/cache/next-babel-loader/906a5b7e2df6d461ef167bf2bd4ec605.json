{"ast":null,"code":"//TODO: Setup the term actions\n\n/*\n    * Create an enumerated value called TermActionTypes\n        it should have one value called updateTerm\n\n    * Create an action creator called updateTerm.  It should update the term piece of state.\n*/\nexport var TermActionTypes;\n\n(function (TermActionTypes) {\n  TermActionTypes[\"updateTerm\"] = \"UPDATE_TERM\";\n})(TermActionTypes || (TermActionTypes = {}));\n\nexport var updateTerm = function updateTerm(searchTerm) {\n  return {\n    type: TermActionTypes.updateTerm,\n    payload: searchTerm\n  };\n};","map":{"version":3,"sources":["/Users/bradtudor/Documents/interview_challenges/Frontend Challenge/frontend-challenge/src/redux/Term/term.actions.ts"],"names":["TermActionTypes","updateTerm","searchTerm","type","payload"],"mappings":"AAAA;;AACA;;;;;;AASA,WAAYA,eAAZ;;WAAYA,e;AAAAA,EAAAA,e;GAAAA,e,KAAAA,e;;AAIZ,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,UAAD,EAAuB;AAC7C,SAAM;AACFC,IAAAA,IAAI,EAAEH,eAAe,CAACC,UADpB;AAEFG,IAAAA,OAAO,EAAEF;AAFP,GAAN;AAIH,CALM","sourcesContent":["//TODO: Setup the term actions\n/*\n    * Create an enumerated value called TermActionTypes\n        it should have one value called updateTerm\n\n    * Create an action creator called updateTerm.  It should update the term piece of state.\n*/\n\n\n\nexport enum TermActionTypes {\n    updateTerm = \"UPDATE_TERM\"\n}\n\nexport const updateTerm = (searchTerm:string) => {\n    return{\n        type: TermActionTypes.updateTerm,\n        payload: searchTerm\n    }\n}"]},"metadata":{},"sourceType":"module"}