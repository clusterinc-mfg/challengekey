{"ast":null,"code":"var _jsxFileName = \"/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/components/BottomBar/BottomBar.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Container, Spacer, Button, ButtonContainer } from './BottomBar.styles';\n\nvar BottomBar = function BottomBar(_ref) {\n  var count = _ref.count,\n      page = _ref.page,\n      setPage = _ref.setPage,\n      itemsPerPage = _ref.itemsPerPage;\n\n  var _useState = useState(1),\n      active = _useState[0],\n      setActive = _useState[1];\n\n  var renderButtons = function renderButtons() {\n    var numberOfPages = Math.ceil(count / itemsPerPage);\n    var buttons = [];\n\n    var moveBack = function moveBack() {\n      setPage(page - 1);\n      setActive(page - 1);\n    };\n\n    var moveForward = function moveForward() {\n      setPage(page + 1);\n      setActive(page + 1);\n    };\n\n    var numberOfButtons = active + 3 > numberOfPages ? numberOfPages - active : 3;\n\n    for (var i = Math.min(active, numberOfPages - 3); i <= Math.min(active - 1 + numberOfButtons, numberOfPages - 1); i++) {\n      if (i >= 1) {\n        buttons.push(i);\n      }\n    }\n\n    if (numberOfPages > 4 && active < numberOfPages - 3) {\n      buttons[buttons.length - 1] === numberOfPages - 1 ? null : buttons.push(null);\n    }\n\n    buttons.push(numberOfPages);\n    buttons = buttons.map(function (pageNumber, i) {\n      return pageNumber ? __jsx(Button, {\n        key: pageNumber,\n        onClick: function onClick() {\n          console.log(pageNumber);\n          setActive(pageNumber);\n          setPage(pageNumber);\n        },\n        isActive: pageNumber === active,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, pageNumber) : __jsx(Spacer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"...\");\n    });\n\n    if (page !== 1) {\n      buttons.unshift(__jsx(Button, {\n        key: \"prev\",\n        onClick: function onClick() {\n          moveBack();\n        },\n        isEnd: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \" \", \"< Prev\"));\n    }\n\n    if (numberOfPages > 1 && active !== numberOfPages) {\n      buttons.push(__jsx(Button, {\n        key: \"next\",\n        onClick: function onClick() {\n          moveForward();\n        },\n        isEnd: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Next >\"));\n    }\n\n    return buttons;\n  };\n\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(ButtonContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, renderButtons()));\n};\n\nexport default BottomBar;","map":{"version":3,"sources":["/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/components/BottomBar/BottomBar.tsx"],"names":["React","useState","Container","Spacer","Button","ButtonContainer","BottomBar","count","page","setPage","itemsPerPage","active","setActive","renderButtons","numberOfPages","Math","ceil","buttons","moveBack","moveForward","numberOfButtons","i","min","push","length","map","pageNumber","console","log","unshift"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,SAAQC,SAAR,EAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,eAAnC,QAAyD,oBAAzD;;AAOA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA0C;AAAA,MAAxCC,KAAwC,QAAxCA,KAAwC;AAAA,MAAjCC,IAAiC,QAAjCA,IAAiC;AAAA,MAA3BC,OAA2B,QAA3BA,OAA2B;AAAA,MAAlBC,YAAkB,QAAlBA,YAAkB;;AAAA,kBAE5BT,QAAQ,CAAC,CAAD,CAFoB;AAAA,MAEjDU,MAFiD;AAAA,MAEzCC,SAFyC;;AAMxD,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,QAAMC,aAAa,GAAGC,IAAI,CAACC,IAAL,CAAUT,KAAK,GAAGG,YAAlB,CAAtB;AACA,QAAIO,OAAO,GAAG,EAAd;;AAEA,QAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBT,MAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACAI,MAAAA,SAAS,CAACJ,IAAI,GAAG,CAAR,CAAT;AACD,KAHD;;AAIA,QAAMW,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBV,MAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACAI,MAAAA,SAAS,CAACJ,IAAI,GAAG,CAAR,CAAT;AACD,KAHD;;AAKA,QAAMY,eAAe,GAAGT,MAAM,GAAG,CAAT,GAAaG,aAAb,GAA6BA,aAAa,GAAGH,MAA7C,GAAsD,CAA9E;;AAEA,SACE,IAAIU,CAAC,GAAGN,IAAI,CAACO,GAAL,CAASX,MAAT,EAAiBG,aAAa,GAAG,CAAjC,CADV,EAEEO,CAAC,IAAIN,IAAI,CAACO,GAAL,CAASX,MAAM,GAAC,CAAP,GAAWS,eAApB,EAAqCN,aAAa,GAAG,CAArD,CAFP,EAGEO,CAAC,EAHH,EAIE;AACA,UAAIA,CAAC,IAAI,CAAT,EAAY;AACVJ,QAAAA,OAAO,CAACM,IAAR,CAAaF,CAAb;AACD;AACF;;AAED,QAAGP,aAAa,GAAG,CAAhB,IAAqBH,MAAM,GAAGG,aAAa,GAAG,CAAjD,EAAmD;AAC/CG,MAAAA,OAAO,CAACA,OAAO,CAACO,MAAR,GAAiB,CAAlB,CAAP,KAAgCV,aAAa,GAAG,CAAhD,GAAoD,IAApD,GAA2DG,OAAO,CAACM,IAAR,CAAa,IAAb,CAA3D;AACH;;AAEDN,IAAAA,OAAO,CAACM,IAAR,CAAaT,aAAb;AAEAG,IAAAA,OAAO,GAAGA,OAAO,CAACQ,GAAR,CAAY,UAACC,UAAD,EAAaL,CAAb;AAAA,aACpBK,UAAU,GACR,MAAC,MAAD;AACE,QAAA,GAAG,EAAEA,UADP;AAEE,QAAA,OAAO,EAAE,mBAAM;AACbC,UAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACAd,UAAAA,SAAS,CAACc,UAAD,CAAT;AACAjB,UAAAA,OAAO,CAACiB,UAAD,CAAP;AAAqB,SALzB;AAMI,QAAA,QAAQ,EAAEA,UAAU,KAAKf,MAN7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQGe,UARH,CADQ,GAYR,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAbkB;AAAA,KAAZ,CAAV;;AAkBA,QAAGlB,IAAI,KAAK,CAAZ,EAAc;AAAES,MAAAA,OAAO,CAACY,OAAR,CAAiB,MAAC,MAAD;AAAQ,QAAA,GAAG,EAAE,MAAb;AAAqB,QAAA,OAAO,EAAG,mBAAI;AAACX,UAAAA,QAAQ;AAAG,SAA/C;AAAkD,QAAA,KAAK,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA0D,QAA1D,CAAjB;AAAiG;;AACjH,QAAGJ,aAAa,GAAG,CAAhB,IAAqBH,MAAM,KAAKG,aAAnC,EAAkD;AAAEG,MAAAA,OAAO,CAACM,IAAR,CAAc,MAAC,MAAD;AAAQ,QAAA,GAAG,EAAE,MAAb;AAAqB,QAAA,OAAO,EAAG,mBAAI;AAACJ,UAAAA,WAAW;AAAG,SAAlD;AAAqD,QAAA,KAAK,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4D,QAA5D,CAAd;AAAiG;;AAErJ,WAAOF,OAAP;AACH,GArDD;;AAwDA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,aAAa,EADlB,CADJ,CADJ;AAcH,CA5ED;;AA8EA,eAAeP,SAAf","sourcesContent":["import React, {useState} from 'react'\n\nimport {Container, Spacer, Button, ButtonContainer} from './BottomBar.styles'\n\n\n\n\n\n\nconst BottomBar = ({count, page, setPage, itemsPerPage}) => {\n\n    const [active, setActive] = useState(1)\n\n\n\n    const renderButtons = () => {\n        const numberOfPages = Math.ceil(count / itemsPerPage)\n        let buttons = []\n\n        const moveBack = () => {\n          setPage(page - 1)\n          setActive(page - 1)\n        }\n        const moveForward = () => {\n          setPage(page + 1)\n          setActive(page + 1)\n        }\n\n        const numberOfButtons = active + 3 > numberOfPages ? numberOfPages - active : 3;\n\n        for (\n          let i = Math.min(active, numberOfPages - 3);\n          i <= Math.min(active-1 + numberOfButtons, numberOfPages - 1);\n          i++\n        ) {\n          if (i >= 1) {\n            buttons.push(i);\n          }\n        }\n    \n        if(numberOfPages > 4 && active < numberOfPages - 3){\n            buttons[buttons.length - 1] === numberOfPages - 1 ? null : buttons.push(null);\n        }\n        \n        buttons.push(numberOfPages);\n\n        buttons = buttons.map((pageNumber, i) =>\n          pageNumber ? (\n            <Button\n              key={pageNumber}\n              onClick={() => { \n                console.log(pageNumber)\n                setActive(pageNumber) \n                setPage(pageNumber) }}\n                isActive={pageNumber === active}\n            >\n              {pageNumber}\n            </Button>\n          ) : (\n            <Spacer>...</Spacer>\n          )\n        );\n\n\n        if(page !== 1){ buttons.unshift( <Button key={\"prev\"} onClick={ ()=>{moveBack()} } isEnd> {\"< Prev\"}</Button> ) }\n        if(numberOfPages > 1 && active !== numberOfPages) { buttons.push( <Button key={\"next\"} onClick={ ()=>{moveForward()} } isEnd>{\"Next >\"}</Button>)   }\n        \n        return buttons\n    }\n\n\n    return(\n        <Container>\n            <ButtonContainer>\n                {renderButtons()}\n                {/* <Button isEnd> {\"< Prev\"}</Button>\n                <Button>1</Button>\n                <Button isActive>2</Button>\n                <Button>3</Button>\n                <Spacer>...</Spacer>\n                <Button>27</Button>\n                <Button isEnd>{\"Next >\"}</Button> */}\n            </ButtonContainer>\n        </Container>\n    )\n}\n\nexport default BottomBar"]},"metadata":{},"sourceType":"module"}