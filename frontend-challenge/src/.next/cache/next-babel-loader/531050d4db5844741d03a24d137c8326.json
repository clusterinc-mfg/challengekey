{"ast":null,"code":"var _jsxFileName = \"/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/HomePage/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport FilterMenu from '../../components/FilterMenu/FilterMenu';\nimport BottomBar from '../../components/BottomBar/BottomBar';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_COUNT, GET_ALL_PROGRAMS } from '../../graphQL/queries';\nimport { Spinner } from '../../components/Spinner/Spinner';\nimport ProgramContainer from '../../components/ProgramContainer/ProgramContainer';\n\nconst HomePage = () => {\n  const itemsPerPage = 10;\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n  const {\n    loading: loadingCount,\n    data: count\n  } = useQuery(GET_COUNT);\n  const {\n    loading: loadingPrograms,\n    data: programs\n  } = useQuery(GET_ALL_PROGRAMS);\n  console.log(count);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(FilterMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), loadingCount || loadingPrograms ? __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }) : __jsx(ProgramContainer, {\n    count: count.count,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), __jsx(BottomBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/HomePage/index.tsx"],"names":["React","useState","Layout","FilterMenu","BottomBar","useQuery","GET_COUNT","GET_ALL_PROGRAMS","Spinner","ProgramContainer","HomePage","itemsPerPage","page","setPage","loading","loadingCount","data","count","loadingPrograms","programs","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAAuBC,QAAvB,QAAuC,qBAAvC;AACA,SAASC,SAAT,EAAoBC,gBAApB,QAA4C,uBAA5C;AACA,SAAQC,OAAR,QAAsB,kCAAtB;AAEA,OAAOC,gBAAP,MAA6B,oDAA7B;;AAUA,MAAMC,QAA0C,GAAG,MAAM;AACvD,QAAMC,YAAY,GAAG,EAArB;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBZ,QAAQ,CAAC,CAAD,CAAhC;AAEA,QAAM;AAAEa,IAAAA,OAAO,EAAEC,YAAX;AAAyBC,IAAAA,IAAI,EAAEC;AAA/B,MAAyCZ,QAAQ,CAACC,SAAD,CAAvD;AACA,QAAM;AAAEQ,IAAAA,OAAO,EAAEI,eAAX;AAA4BF,IAAAA,IAAI,EAAEG;AAAlC,MAA+Cd,QAAQ,CAAEE,gBAAF,CAA7D;AAGAa,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGF,YAAY,IAAIG,eAAhB,GAAkC,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlC,GAA+C,MAAC,gBAAD;AAAkB,IAAA,KAAK,EAAED,KAAK,CAACA,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFlD,EAGE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CAjBD;;AAmBA,eAAeP,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Layout from '../../components/Layout/Layout';\nimport FilterMenu from '../../components/FilterMenu/FilterMenu';\nimport BottomBar from '../../components/BottomBar/BottomBar';\nimport { useLazyQuery, useQuery } from '@apollo/react-hooks';\nimport { GET_COUNT, GET_ALL_PROGRAMS } from '../../graphQL/queries';\nimport {Spinner} from '../../components/Spinner/Spinner'\n\nimport ProgramContainer from '../../components/ProgramContainer/ProgramContainer';\n\ntype HomePageProps = {\n  getInitialProps: Function;\n};\n\ninterface HomePageInterface<HomePageProps> extends React.FC<HomePageProps> {\n  getInitialProps?: (ctx: any) => Promise<any>;\n}\n\nconst HomePage: HomePageInterface<HomePageProps> = () => {\n  const itemsPerPage = 10;\n  const [page, setPage] = useState(1);\n\n  const { loading: loadingCount, data: count } = useQuery(GET_COUNT);\n  const { loading: loadingPrograms, data: programs } = useQuery( GET_ALL_PROGRAMS );\n\n\n  console.log(count)\n\n  return (\n    <Layout>\n      <FilterMenu />\n      {loadingCount || loadingPrograms ? <Spinner/> : <ProgramContainer count={count.count}/>}\n      <BottomBar />\n    </Layout>\n  );\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}