{"ast":null,"code":"var _jsxFileName = \"/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/HomePage/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport FilterMenu from '../../components/FilterMenu/FilterMenu';\nimport BottomBar from '../../components/BottomBar/BottomBar';\nimport { useQuery } from '@apollo/react-hooks';\nimport { PROGRAM_SEARCH } from '../../graphQL/queries';\nimport { Spinner } from '../../components/Spinner/Spinner';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport { ResultsHeader, ProgramContainer } from './HomePage.styles';\nimport ProgramRow from '../../components/ProgramRow/ProgramRow';\n\nvar renderProgramContainer = function renderProgramContainer(programs, count) {\n  var term = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  var renderPrograms = function renderPrograms(programs) {\n    return programs.map(function (program, i) {\n      return __jsx(ProgramRow, {\n        key: program.id + program.name + i,\n        program: program,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      });\n    });\n  };\n\n  var renderHeader = function renderHeader(count, term) {\n    return term ? \"\".concat(count, \" items found for \").concat(term) : \"\".concat(count, \" items found\");\n  };\n\n  return __jsx(ProgramContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(ResultsHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, renderHeader(count, term)), renderPrograms(programs));\n};\n\nvar HomePage = function HomePage() {\n  var count = 0;\n  var programs = [];\n  var itemsPerPage = 10;\n\n  var _useState = useState(1),\n      page = _useState[0],\n      setPage = _useState[1];\n\n  var term = useSelector(function (state) {\n    return state.term;\n  }, shallowEqual);\n  var sort = useSelector(function (state) {\n    return state.sort;\n  }, shallowEqual);\n  var filter = useSelector(function (state) {\n    return state.filter;\n  }, shallowEqual);\n\n  var _useQuery = useQuery(PROGRAM_SEARCH, {\n    variables: {\n      data: {\n        offset: (page - 1) * itemsPerPage,\n        limit: itemsPerPage,\n        term: term,\n        sort: sort,\n        filter: filter\n      }\n    }\n  }),\n      loading = _useQuery.loading,\n      data = _useQuery.data;\n\n  if (!loading) {\n    count = data.programSearch.count;\n    programs = data.programSearch.programs;\n  }\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(FilterMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), loading ? __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }) : renderProgramContainer(programs, count, term), __jsx(BottomBar, {\n    count: count,\n    page: page,\n    setPage: setPage,\n    itemsPerPage: itemsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }));\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/HomePage/index.tsx"],"names":["React","useState","Layout","FilterMenu","BottomBar","useQuery","PROGRAM_SEARCH","Spinner","useSelector","shallowEqual","ResultsHeader","ProgramContainer","ProgramRow","renderProgramContainer","programs","count","term","renderPrograms","map","program","i","id","name","renderHeader","HomePage","itemsPerPage","page","setPage","state","sort","filter","variables","data","offset","limit","loading","programSearch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport FilterMenu from '../../components/FilterMenu/FilterMenu';\nimport BottomBar from '../../components/BottomBar/BottomBar';\nimport { useQuery } from '@apollo/react-hooks';\nimport { PROGRAM_SEARCH } from '../../graphQL/queries';\nimport { Spinner } from '../../components/Spinner/Spinner';\nimport {useSelector, shallowEqual} from 'react-redux'\nimport { ResultsHeader , ProgramContainer} from './HomePage.styles'\nimport ProgramRow from '../../components/ProgramRow/ProgramRow';\n\n\ntype HomePageProps = {\n  getInitialProps: Function;\n};\n\ninterface HomePageInterface<HomePageProps> extends React.FC<HomePageProps> {\n  getInitialProps?: (ctx: any) => Promise<any>;\n}\n\n\n\nconst renderProgramContainer = (programs, count, term=null) => {\n\n  const renderPrograms = programs => {\n    return programs.map((program, i) => <ProgramRow key={program.id + program.name + i} program={program} />);\n  };\n  \n  const renderHeader = (count, term) => term ? `${count} items found for ${term}` :`${count} items found` \n\n  return (\n    <ProgramContainer>\n    <ResultsHeader>{renderHeader(count, term)}</ResultsHeader> \n        {renderPrograms(programs)}\n    </ProgramContainer>\n  )\n}\n\n\nconst HomePage: HomePageInterface<HomePageProps> = () => {\n  let count = 0\n  let programs = []\n  const itemsPerPage = 10;\n  const [page, setPage] = useState(1);\n  const term = useSelector((state:any) => state.term, shallowEqual )\n  const sort = useSelector((state:any) => state.sort, shallowEqual )\n  const filter = useSelector((state:any) => state.filter, shallowEqual )\n\n  const { loading, data } = useQuery(\n    PROGRAM_SEARCH, { variables: {\n      data: {\n        offset: (page-1) * itemsPerPage,\n        limit: itemsPerPage,\n        term, sort, filter\n      }\n    }\n  });\n\n  if(!loading){\n    count = data.programSearch.count\n    programs = data.programSearch.programs\n  }\n\n  return (\n    <Layout >\n      <FilterMenu />\n      { loading ? <Spinner /> : renderProgramContainer(programs,count,term) }\n      <BottomBar count={count} page={page} setPage={setPage} itemsPerPage={itemsPerPage}/>\n    </Layout>\n  );\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}