{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar _jsxFileName = \"/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/HomePage/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport Layout from '../../components/Layout/Layout';\nimport Header from '../../components/Header/Header';\nimport FilterMenu from '../../components/FilterMenu/FilterMenu';\nimport BottomBar from '../../components/BottomBar/BottomBar';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { GET_COUNT, GET_ALL_PROGRAMS } from '../../graphQL/queries';\n\nconst HomePage = () => {\n  const [getAllPrograms, {\n    loading,\n    data,\n    fetchMore\n  }] = useLazyQuery(GET_ALL_PROGRAMS, {\n    variables: {\n      offset: 0,\n      limit: 10\n    },\n    fetchPolicy: \"cache-and-network\"\n  });\n  useEffect(() => {\n    getAllPrograms();\n  }, []);\n\n  if (data && data.allPrograms) {\n    console.log(data.allPrograms);\n  }\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), __jsx(FilterMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), __jsx(BottomBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }));\n};\n\nconst getQuery = (QUERY, params) => new _Promise(async (res, rej) => {\n  const data = await axios({\n    url: \"http://localhost:4000/gql\",\n    method: \"post\",\n    data: {\n      query: GET_COUNT\n    }\n  });\n  res(data);\n});\n\nHomePage.getInitialProps = async ctx => {\n  //let resp:any = await getQuery(GET_COUNT)\n  return {};\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/HomePage/index.tsx"],"names":["React","useEffect","axios","Layout","Header","FilterMenu","BottomBar","useLazyQuery","GET_COUNT","GET_ALL_PROGRAMS","HomePage","getAllPrograms","loading","data","fetchMore","variables","offset","limit","fetchPolicy","allPrograms","console","log","getQuery","QUERY","params","res","rej","url","method","query","getInitialProps","ctx"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,SAAf,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAAQC,YAAR,QAA2B,qBAA3B;AACA,SAAQC,SAAR,EAAmBC,gBAAnB,QAA0C,uBAA1C;;AAYA,MAAMC,QAA0C,GAAG,MAAM;AAEvD,QAAM,CAACC,cAAD,EAAiB;AAACC,IAAAA,OAAD;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA;AAAhB,GAAjB,IAA+CP,YAAY,CAACE,gBAAD,EAAmB;AAClFM,IAAAA,SAAS,EAAE;AACTC,MAAAA,MAAM,EAAE,CADC;AAETC,MAAAA,KAAK,EAAE;AAFE,KADuE;AAKlFC,IAAAA,WAAW,EAAE;AALqE,GAAnB,CAAjE;AAQAjB,EAAAA,SAAS,CAAC,MAAI;AACZU,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAGE,IAAI,IAAIA,IAAI,CAACM,WAAhB,EAA4B;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACM,WAAjB;AACA;;AAID,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAIA,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,CADF;AAQD,CA5BD;;AA8BA,MAAMG,QAAQ,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAoB,aAAY,OAAOC,GAAP,EAAYC,GAAZ,KAAmB;AAClE,QAAMb,IAAQ,GAAG,MAAMX,KAAK,CAAC;AAC3ByB,IAAAA,GAAG,EAAE,2BADsB;AAE3BC,IAAAA,MAAM,EAAE,MAFmB;AAG3Bf,IAAAA,IAAI,EAAE;AACJgB,MAAAA,KAAK,EAAErB;AADH;AAHqB,GAAD,CAA5B;AAOAiB,EAAAA,GAAG,CAACZ,IAAD,CAAH;AACD,CAToC,CAArC;;AAWAH,QAAQ,CAACoB,eAAT,GAA2B,MAAMC,GAAN,IAAc;AAEvC;AAGA,SAAO,EAAP;AACD,CAND;;AASA,eAAerB,QAAf","sourcesContent":["\nimport React, {useEffect, useState} from 'react';\nimport axios from 'axios'\nimport Layout from '../../components/Layout/Layout'\nimport Header from '../../components/Header/Header'\nimport FilterMenu from '../../components/FilterMenu/FilterMenu'\nimport BottomBar from '../../components/BottomBar/BottomBar'\nimport {useLazyQuery} from '@apollo/react-hooks'\nimport {GET_COUNT, GET_ALL_PROGRAMS} from '../../graphQL/queries'\n\nimport ProgramContainer from '../../components/ProgramContainer/ProgramContainer'\n\ntype HomePageProps = {\n  getInitialProps: Function\n}\n\ninterface HomePageInterface<HomePageProps> extends React.FC<HomePageProps> {\n  getInitialProps?: (ctx: any) => Promise<any>\n}\n\nconst HomePage: HomePageInterface<HomePageProps> = () => {\n\n  const [getAllPrograms, {loading, data, fetchMore}] = useLazyQuery(GET_ALL_PROGRAMS, {\n    variables: {\n      offset: 0,\n      limit: 10\n    },\n    fetchPolicy: \"cache-and-network\"\n  })\n\n  useEffect(()=>{\n    getAllPrograms()\n  }, [])\n\n  if(data && data.allPrograms){\n   console.log(data.allPrograms)\n  }\n\n  \n\n  return (\n    <Layout>\n    <Header />\n    <FilterMenu />\n    {/* <ProgramContainer /> */}\n    <BottomBar/>\n  </Layout>\n  )\n}\n\nconst getQuery = (QUERY, params?) => new Promise(async (res, rej)=> {\n  const data:any = await axios({\n    url: \"http://localhost:4000/gql\",\n    method: \"post\",\n    data: {\n      query: GET_COUNT\n    }\n  })\n  res(data)\n})\n\nHomePage.getInitialProps = async(ctx) => {\n  \n  //let resp:any = await getQuery(GET_COUNT)\n\n\n  return {}\n}\n\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}