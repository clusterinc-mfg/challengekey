{"ast":null,"code":"var _jsxFileName = \"/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/programDetail/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_PROGRAM } from '../../graphQL/queries';\nimport Layout from '../../components/Layout/Layout';\nimport { Spinner } from '../../components/Spinner/Spinner';\n\nvar renderBody = function renderBody(program) {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  });\n};\n\nvar SchoolPage = function SchoolPage(_ref) {\n  var router = _ref.router;\n\n  var _useQuery = useQuery(GET_PROGRAM, {\n    variables: {\n      data: {\n        id: router.query.id\n      }\n    }\n  }),\n      loading = _useQuery.loading,\n      data = _useQuery.data;\n\n  if (!loading) {\n    console.log(data);\n  }\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, loading ? __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }) : renderBody(data.program));\n};\n\nexport default withRouter(SchoolPage);","map":{"version":3,"sources":["/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/programDetail/index.tsx"],"names":["React","withRouter","useQuery","GET_PROGRAM","Layout","Spinner","renderBody","program","SchoolPage","router","variables","data","id","query","loading","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,OAAT,QAAwB,kCAAxB;;AAIA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAa;AAC5B,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAKH,CAND;;AAWA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;;AAAA,kBAEPP,QAAQ,CAACC,WAAD,EAAc;AAC9CO,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,EAAE,EAAEH,MAAM,CAACI,KAAP,CAAaD;AAAnB;AADG;AADmC,GAAd,CAFD;AAAA,MAEzBE,OAFyB,aAEzBA,OAFyB;AAAA,MAEhBH,IAFgB,aAEhBA,IAFgB;;AAQjC,MAAI,CAACG,OAAL,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACD;;AAED,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,OAAO,GAAG,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAiBR,UAAU,CAACK,IAAI,CAACJ,OAAN,CADrC,CADF;AAKD,CAjBD;;AAmBA,eAAeN,UAAU,CAACO,UAAD,CAAzB","sourcesContent":["import React from 'react';\nimport Head from 'next/head';\nimport { withRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_PROGRAM } from '../../graphQL/queries';\nimport Layout from '../../components/Layout/Layout';\nimport { Spinner } from '../../components/Spinner/Spinner';\n\n\n\nconst renderBody = (program) => {\n    return(\n        <div>\n             \n        </div>\n    )\n}\n\n\n\n\nconst SchoolPage = ({ router }) => {\n\n  const { loading, data } = useQuery(GET_PROGRAM, {\n    variables: {\n      data: { id: router.query.id },\n    },\n  });\n\n  if (!loading) {\n    console.log(data);\n  }\n\n  return (\n    <Layout>\n      {loading ? <Spinner /> : renderBody(data.program)}\n    </Layout>\n    )\n};\n\nexport default withRouter(SchoolPage);\n"]},"metadata":{},"sourceType":"module"}