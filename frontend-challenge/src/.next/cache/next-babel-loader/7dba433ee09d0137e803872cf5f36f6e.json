{"ast":null,"code":"var _jsxFileName = \"/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/components/ProgramContainer/ProgramContainer.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Wrapper, ResultsHeader } from './ProgramContainer.styles';\nimport ProgramRow from '../ProgramRow/ProgramRow';\n\nvar renderPrograms = function renderPrograms(programs) {\n  return programs.map(function (program) {\n    return __jsx(ProgramRow, {\n      program: program,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    });\n  });\n};\n\nvar renderHeader = function renderHeader(term, count) {\n  return term ? __jsx(ResultsHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"\".concat(count, \" programs found for \").concat(term, \"!\")) : __jsx(ResultsHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"\".concat(count, \" programs found!\"));\n};\n\nvar ProgramContainer = function ProgramContainer(count, term, programs) {\n  return __jsx(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, renderHeader(count, term), renderPrograms(programs));\n};\n\nexport default ProgramContainer;","map":{"version":3,"sources":["/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/components/ProgramContainer/ProgramContainer.tsx"],"names":["React","Wrapper","ResultsHeader","ProgramRow","renderPrograms","programs","map","program","renderHeader","term","count","ProgramContainer"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,2BAAvC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,QAAQ,EAAI;AACjC,SAAOA,QAAQ,CAACC,GAAT,CAAa,UAAAC,OAAO;AAAA,WAAI,MAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ;AAAA,GAApB,CAAP;AACD,CAFD;;AAIA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAOC,KAAP;AAAA,SACnBD,IAAI,GACF,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAmBC,KAAnB,iCAA+CD,IAA/C,OADE,GAGF,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAmBC,KAAnB,sBAJiB;AAAA,CAArB;;AAOA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACD,KAAD,EAAQD,IAAR,EAAcJ,QAAd;AAAA,SACvB,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,YAAY,CAACE,KAAD,EAAQD,IAAR,CADf,EAEGL,cAAc,CAACC,QAAD,CAFjB,CADuB;AAAA,CAAzB;;AAOA,eAAeM,gBAAf","sourcesContent":["import React from 'react';\n\nimport { Wrapper, ResultsHeader } from './ProgramContainer.styles';\nimport ProgramRow from '../ProgramRow/ProgramRow';\n\nconst renderPrograms = programs => {\n  return programs.map(program => <ProgramRow program={program} />);\n};\n\nconst renderHeader = (term, count) =>\n  term ? (\n    <ResultsHeader>{`${count} programs found for ${term}!`}</ResultsHeader>\n  ) : (\n    <ResultsHeader>{`${count} programs found!`}</ResultsHeader>\n  );\n\nconst ProgramContainer = (count, term, programs) => (\n  <Wrapper>\n    {renderHeader(count, term)}\n    {renderPrograms(programs)}\n  </Wrapper>\n);\n\nexport default ProgramContainer;\n"]},"metadata":{},"sourceType":"module"}