{"ast":null,"code":"var _jsxFileName = \"/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/components/BottomBar/BottomBar.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Container, Spacer, Button, ButtonContainer } from './BottomBar.styles';\n\nconst renderButtons = (currentIndex, currentCount, displayTotal) => {\n  const totalPages = Math.ceil(currentCount / displayTotal);\n  const buttons = [];\n  const numberOfButtons = currentIndex + 3 > totalPages ? totalPages - currentIndex : 3;\n\n  for (let i = Math.min(currentIndex + 1, totalPages - 3); i <= Math.min(currentIndex + numberOfButtons, totalPages - 1); i++) {\n    if (i >= 1) {\n      buttons.push(i);\n    }\n  }\n\n  buttons[buttons.length - 1] === totalPages - 1 ? null : buttons.push(null);\n  buttons.push(totalPages);\n  return buttons.map((pageNumber, i) => pageNumber ? __jsx(Button, {\n    key: i,\n    onClick: () => {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, pageNumber) : __jsx(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"...\"));\n};\n\nconst BottomBar = ({\n  page,\n  setPage,\n  itemsPerPage\n}) => {\n  const {\n    0: active,\n    1: setActive\n  } = useState(1);\n\n  const moveBack = () => {\n    setPage(page - 1);\n  };\n\n  const moveForward = () => {\n    setPage(page + 1);\n  };\n\n  const renderButtons = () => {\n    const numberOfPages = Math.ceil(page / itemsPerPage); //buttons if there are 4 or less pages\n    //buttons if there are more then 4 pages\n  };\n\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(ButtonContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, renderButtons()));\n};\n\nexport default BottomBar;","map":{"version":3,"sources":["/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/components/BottomBar/BottomBar.tsx"],"names":["React","useState","Container","Spacer","Button","ButtonContainer","renderButtons","currentIndex","currentCount","displayTotal","totalPages","Math","ceil","buttons","numberOfButtons","i","min","push","length","map","pageNumber","BottomBar","page","setPage","itemsPerPage","active","setActive","moveBack","moveForward","numberOfPages"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,SAAQC,SAAR,EAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,eAAnC,QAAyD,oBAAzD;;AAIA,MAAMC,aAAa,GAAG,CAACC,YAAD,EAAeC,YAAf,EAA6BC,YAA7B,KAA8C;AAChE,QAAMC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUJ,YAAY,GAAGC,YAAzB,CAAnB;AAEA,QAAMI,OAAO,GAAG,EAAhB;AAEA,QAAMC,eAAe,GAAGP,YAAY,GAAG,CAAf,GAAmBG,UAAnB,GAAgCA,UAAU,GAAGH,YAA7C,GAA4D,CAApF;;AAEA,OACE,IAAIQ,CAAC,GAAGJ,IAAI,CAACK,GAAL,CAAST,YAAY,GAAG,CAAxB,EAA2BG,UAAU,GAAG,CAAxC,CADV,EAEEK,CAAC,IAAIJ,IAAI,CAACK,GAAL,CAAST,YAAY,GAAGO,eAAxB,EAAyCJ,UAAU,GAAG,CAAtD,CAFP,EAGEK,CAAC,EAHH,EAIE;AACA,QAAIA,CAAC,IAAI,CAAT,EAAY;AACVF,MAAAA,OAAO,CAACI,IAAR,CAAaF,CAAb;AACD;AACF;;AAEDF,EAAAA,OAAO,CAACA,OAAO,CAACK,MAAR,GAAiB,CAAlB,CAAP,KAAgCR,UAAU,GAAG,CAA7C,GAAiD,IAAjD,GAAwDG,OAAO,CAACI,IAAR,CAAa,IAAb,CAAxD;AAEAJ,EAAAA,OAAO,CAACI,IAAR,CAAaP,UAAb;AACA,SAAOG,OAAO,CAACM,GAAR,CAAY,CAACC,UAAD,EAAaL,CAAb,KACjBK,UAAU,GACR,MAAC,MAAD;AACE,IAAA,GAAG,EAAEL,CADP;AAEE,IAAA,OAAO,EAAE,MAAM,CAAG,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGK,UAJH,CADQ,GAQR,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WATG,CAAP;AAYD,CAhCH;;AAoCA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA;AAAhB,CAAD,KAAmC;AAEjD,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBzB,QAAQ,CAAC,CAAD,CAApC;;AAEA,QAAM0B,QAAQ,GAAG,MAAM;AAACJ,IAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AAAkB,GAA1C;;AACA,QAAMM,WAAW,GAAG,MAAM;AAACL,IAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AAAkB,GAA7C;;AAEA,QAAMhB,aAAa,GAAG,MAAM;AACxB,UAAMuB,aAAa,GAAGlB,IAAI,CAACC,IAAL,CAAUU,IAAI,GAAGE,YAAjB,CAAtB,CADwB,CAGxB;AACA;AAEH,GAND;;AASA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlB,aAAa,EADlB,CADJ,CADJ;AAcH,CA9BD;;AAgCA,eAAee,SAAf","sourcesContent":["import React, {useState} from 'react'\n\nimport {Container, Spacer, Button, ButtonContainer} from './BottomBar.styles'\n\n\n\nconst renderButtons = (currentIndex, currentCount, displayTotal) => {\n    const totalPages = Math.ceil(currentCount / displayTotal);\n\n    const buttons = [];\n\n    const numberOfButtons = currentIndex + 3 > totalPages ? totalPages - currentIndex : 3;\n\n    for (\n      let i = Math.min(currentIndex + 1, totalPages - 3);\n      i <= Math.min(currentIndex + numberOfButtons, totalPages - 1);\n      i++\n    ) {\n      if (i >= 1) {\n        buttons.push(i);\n      }\n    }\n\n    buttons[buttons.length - 1] === totalPages - 1 ? null : buttons.push(null);\n\n    buttons.push(totalPages);\n    return buttons.map((pageNumber, i) =>\n      pageNumber ? (\n        <Button\n          key={i}\n          onClick={() => { }}\n        >\n          {pageNumber}\n        </Button>\n      ) : (\n        <Spacer>...</Spacer>\n      )\n    );\n  };\n\n\n\nconst BottomBar = ({page, setPage, itemsPerPage}) => {\n\n    const [active, setActive] = useState(1)\n\n    const moveBack = () => {setPage(page - 1)}\n    const moveForward = () => {setPage(page + 1)}\n\n    const renderButtons = () => {\n        const numberOfPages = Math.ceil(page / itemsPerPage)\n\n        //buttons if there are 4 or less pages\n        //buttons if there are more then 4 pages\n  \n    }\n\n\n    return(\n        <Container>\n            <ButtonContainer>\n                {renderButtons()}\n                {/* <Button isEnd> {\"< Prev\"}</Button>\n                <Button>1</Button>\n                <Button isActive>2</Button>\n                <Button>3</Button>\n                <Spacer>...</Spacer>\n                <Button>27</Button>\n                <Button isEnd>{\"Next >\"}</Button> */}\n            </ButtonContainer>\n        </Container>\n    )\n}\n\nexport default BottomBar"]},"metadata":{},"sourceType":"module"}