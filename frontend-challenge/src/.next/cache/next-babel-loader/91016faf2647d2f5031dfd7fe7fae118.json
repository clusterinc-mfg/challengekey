{"ast":null,"code":"var _jsxFileName = \"/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/components/BottomBar/BottomBar.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Container, Spacer, Button, ButtonContainer } from './BottomBar.styles';\n\nvar renderButtons = function renderButtons(currentIndex, currentCount, displayTotal) {\n  var totalPages = Math.ceil(currentCount / displayTotal);\n  var buttons = [];\n  var numberOfButtons = currentIndex + 3 > totalPages ? totalPages - currentIndex : 3;\n\n  for (var i = Math.min(currentIndex + 1, totalPages - 3); i <= Math.min(currentIndex + numberOfButtons, totalPages - 1); i++) {\n    if (i >= 1) {\n      buttons.push(i);\n    }\n  }\n\n  buttons[buttons.length - 1] === totalPages - 1 ? null : buttons.push(null);\n  buttons.push(totalPages);\n  return buttons.map(function (pageNumber, i) {\n    return pageNumber ? __jsx(Button, {\n      key: i,\n      onClick: function onClick() {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, pageNumber) : __jsx(Spacer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"...\");\n  });\n};\n\nvar BottomBar = function BottomBar(_ref) {\n  var page = _ref.page,\n      setPage = _ref.setPage,\n      itemsPerPage = _ref.itemsPerPage;\n\n  var _useState = useState(1),\n      active = _useState[0],\n      setActive = _useState[1];\n\n  var moveBack = function moveBack() {\n    setPage(page - 1);\n  };\n\n  var moveForward = function moveForward() {\n    setPage(page + 1);\n  };\n\n  var renderButtons = function renderButtons() {\n    var numberOfPages = Math.ceil(page / itemsPerPage);\n    var buttons = [];\n\n    if (page !== 1) {\n      buttons.push(__jsx(Button, {\n        key: \"prev\",\n        onClick: function onClick() {\n          moveBack();\n        },\n        isEnd: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \" \", \"< Prev\"));\n    }\n\n    if (numberOfPages > 1 && active !== numberOfPages) {\n      buttons.push(__jsx(Button, {\n        key: \"next\",\n        onClick: function onClick() {\n          moveForward();\n        },\n        isEnd: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Next >\"));\n    }\n\n    return buttons;\n  };\n\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(ButtonContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, renderButtons()));\n};\n\nexport default BottomBar;","map":{"version":3,"sources":["/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/components/BottomBar/BottomBar.tsx"],"names":["React","useState","Container","Spacer","Button","ButtonContainer","renderButtons","currentIndex","currentCount","displayTotal","totalPages","Math","ceil","buttons","numberOfButtons","i","min","push","length","map","pageNumber","BottomBar","page","setPage","itemsPerPage","active","setActive","moveBack","moveForward","numberOfPages"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\n\nimport {Container, Spacer, Button, ButtonContainer} from './BottomBar.styles'\n\n\n\nconst renderButtons = (currentIndex, currentCount, displayTotal) => {\n    const totalPages = Math.ceil(currentCount / displayTotal);\n\n    const buttons = [];\n\n    const numberOfButtons = currentIndex + 3 > totalPages ? totalPages - currentIndex : 3;\n\n    for (\n      let i = Math.min(currentIndex + 1, totalPages - 3);\n      i <= Math.min(currentIndex + numberOfButtons, totalPages - 1);\n      i++\n    ) {\n      if (i >= 1) {\n        buttons.push(i);\n      }\n    }\n\n    buttons[buttons.length - 1] === totalPages - 1 ? null : buttons.push(null);\n\n    buttons.push(totalPages);\n    return buttons.map((pageNumber, i) =>\n      pageNumber ? (\n        <Button\n          key={i}\n          onClick={() => { }}\n        >\n          {pageNumber}\n        </Button>\n      ) : (\n        <Spacer>...</Spacer>\n      )\n    );\n  };\n\n\n\nconst BottomBar = ({page, setPage, itemsPerPage}) => {\n\n    const [active, setActive] = useState(1)\n\n    const moveBack = () => {setPage(page - 1)}\n    const moveForward = () => {setPage(page + 1)}\n\n    const renderButtons = () => {\n        const numberOfPages = Math.ceil(page / itemsPerPage)\n        const buttons = []\n        if(page !== 1){ buttons.push( <Button key={\"prev\"} onClick={ ()=>{moveBack()} } isEnd> {\"< Prev\"}</Button> ) }\n        \n        if(numberOfPages > 1 && active !== numberOfPages) { buttons.push( <Button key={\"next\"} onClick={ ()=>{moveForward()} } isEnd>{\"Next >\"}</Button>)   }\n        return buttons\n    }\n\n\n    return(\n        <Container>\n            <ButtonContainer>\n                {renderButtons()}\n                {/* <Button isEnd> {\"< Prev\"}</Button>\n                <Button>1</Button>\n                <Button isActive>2</Button>\n                <Button>3</Button>\n                <Spacer>...</Spacer>\n                <Button>27</Button>\n                <Button isEnd>{\"Next >\"}</Button> */}\n            </ButtonContainer>\n        </Container>\n    )\n}\n\nexport default BottomBar"]},"metadata":{},"sourceType":"module"}