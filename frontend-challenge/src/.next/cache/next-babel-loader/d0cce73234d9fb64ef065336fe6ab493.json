{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query program($data: ProgramInput){\\n        program(data: $data){\\n            id\\n            name\\n            costPerCredit\\n            programUrl\\n            programDescription\\n            deliveryMode\\n            school {\\n                name\\n                schoolLogo\\n                backgroundColor\\n                gradientColor\\n                schoolDescription\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query programSearch($data: ProgramSearchTermInput) {\\n        programSearch(data: $data){\\n        count\\n        programs {\\n            id\\n            name\\n            degreeType\\n            deliveryMode\\n            school{\\n                name\\n                schoolLogo\\n                totalEnrollment\\n                schoolType\\n            }\\n        }\\n    }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nexport var PROGRAM_SEARCH = gql(_templateObject());\nexport var GET_PROGRAM = gql(_templateObject2());","map":{"version":3,"sources":["/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/graphQL/queries.ts"],"names":["gql","PROGRAM_SEARCH","GET_PROGRAM"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AASA,OAAO,IAAMC,cAAc,GAAGD,GAAH,mBAApB;AAyBP,OAAO,IAAME,WAAW,GAAGF,GAAH,oBAAjB","sourcesContent":["import gql from 'graphql-tag';\n\n\ntype ProgramSearchTermInput = {\n    offset: Number,\n    limit: Number,\n    term: String\n}\n\nexport const PROGRAM_SEARCH = gql`\n    query programSearch($data: ProgramSearchTermInput) {\n        programSearch(data: $data){\n        count\n        programs {\n            id\n            name\n            degreeType\n            deliveryMode\n            school{\n                name\n                schoolLogo\n                totalEnrollment\n                schoolType\n            }\n        }\n    }\n}\n`\n\ntype ProgramInput = {\n    id: String\n}\n\n\nexport const GET_PROGRAM = gql`\n    query program($data: ProgramInput){\n        program(data: $data){\n            id\n            name\n            costPerCredit\n            programUrl\n            programDescription\n            deliveryMode\n            school {\n                name\n                schoolLogo\n                backgroundColor\n                gradientColor\n                schoolDescription\n            }\n        }\n    }\n`"]},"metadata":{},"sourceType":"module"}