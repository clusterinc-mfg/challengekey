{"ast":null,"code":"var _jsxFileName = \"/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/programDetail/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport { withRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_PROGRAM } from '../../graphQL/queries';\nimport Layout from '../../components/Layout/Layout';\nimport { Spinner } from '../../components/Spinner/Spinner';\nimport SchoolBanner from '../../components/SchoolBanner/SchoolBanner';\nimport ProgramInfoBanner from '../../components/ProgramInfoBanner/ProgramInfoBanner';\nimport ProgramInfo from '../../components/ProgramInfo/ProgramInfo';\n\nconst renderBody = ({\n  name,\n  programDescription,\n  school,\n  costPerCredit,\n  requiredCredits\n}) => {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, name)), __jsx(SchoolBanner, {\n    school: school,\n    name: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), __jsx(ProgramInfoBanner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), __jsx(ProgramInfo, {\n    programDescription: programDescription,\n    schoolDescription: school.schoolDescription,\n    schoolName: school.name,\n    costPerCredit: costPerCredit,\n    requiredCredits: requiredCredits,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\n\nconst SchoolPage = ({\n  router\n}) => {\n  const {\n    loading,\n    data\n  } = useQuery(GET_PROGRAM, {\n    variables: {\n      data: {\n        id: router.query.id\n      }\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, loading ? __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }) : renderBody(data.program)));\n};\n\nexport default withRouter(SchoolPage);","map":{"version":3,"sources":["/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/programDetail/index.tsx"],"names":["React","Head","withRouter","useQuery","GET_PROGRAM","Layout","Spinner","SchoolBanner","ProgramInfoBanner","ProgramInfo","renderBody","name","programDescription","school","costPerCredit","requiredCredits","schoolDescription","SchoolPage","router","loading","data","variables","id","query","program"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,OAAT,QAAwB,kCAAxB;AAEA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,iBAAP,MAA8B,sDAA9B;AACA,OAAOC,WAAP,MAAwB,0CAAxB;;AAIA,MAAMC,UAAU,GAAG,CAAC;AAClBC,EAAAA,IADkB;AAElBC,EAAAA,kBAFkB;AAGlBC,EAAAA,MAHkB;AAIlBC,EAAAA,aAJkB;AAKlBC,EAAAA;AALkB,CAAD,KAMb;AAGJ,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQJ,IAAR,CADF,CADF,EAIE,MAAC,YAAD;AAAc,IAAA,MAAM,EAAEE,MAAtB;AAA8B,IAAA,IAAI,EAAEF,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME,MAAC,WAAD;AACE,IAAA,kBAAkB,EAAEC,kBADtB;AAEE,IAAA,iBAAiB,EAAEC,MAAM,CAACG,iBAF5B;AAGE,IAAA,UAAU,EAAEH,MAAM,CAACF,IAHrB;AAIE,IAAA,aAAa,EAAEG,aAJjB;AAKE,IAAA,eAAe,EAAEC,eALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAgBD,CAzBD;;AA2BA,MAAME,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACjC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBjB,QAAQ,CAACC,WAAD,EAAc;AAC9CiB,IAAAA,SAAS,EAAE;AACTD,MAAAA,IAAI,EAAE;AAAEE,QAAAA,EAAE,EAAEJ,MAAM,CAACK,KAAP,CAAaD;AAAnB;AADG;AADmC,GAAd,CAAlC;AAMA,SACE,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASH,OAAO,GAAG,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAiBT,UAAU,CAACU,IAAI,CAACI,OAAN,CAA3C,CADF,CADF;AAKD,CAZD;;AAcA,eAAetB,UAAU,CAACe,UAAD,CAAzB","sourcesContent":["import React from 'react';\nimport Head from 'next/head';\nimport { withRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_PROGRAM } from '../../graphQL/queries';\nimport Layout from '../../components/Layout/Layout';\nimport { Spinner } from '../../components/Spinner/Spinner';\n\nimport SchoolBanner from '../../components/SchoolBanner/SchoolBanner';\nimport ProgramInfoBanner from '../../components/ProgramInfoBanner/ProgramInfoBanner';\nimport ProgramInfo from '../../components/ProgramInfo/ProgramInfo';\n\n\n\nconst renderBody = ({\n  name,\n  programDescription,\n  school,\n  costPerCredit,\n  requiredCredits\n}) => {\n\n\n  return (\n    <div>\n      <Head>\n        <title>{name}</title>\n      </Head>\n      <SchoolBanner school={school} name={name} />\n      <ProgramInfoBanner/>\n      <ProgramInfo\n        programDescription={programDescription}\n        schoolDescription={school.schoolDescription}\n        schoolName={school.name}\n        costPerCredit={costPerCredit}\n        requiredCredits={requiredCredits}\n      />\n    </div>\n  );\n};\n\nconst SchoolPage = ({ router }) => {\n  const { loading, data } = useQuery(GET_PROGRAM, {\n    variables: {\n      data: { id: router.query.id },\n    },\n  });\n\n  return (\n    <>\n      <Layout>{loading ? <Spinner /> : renderBody(data.program)}</Layout>\n    </>\n  );\n};\n\nexport default withRouter(SchoolPage);\n"]},"metadata":{},"sourceType":"module"}