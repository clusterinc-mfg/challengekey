{"ast":null,"code":"var _jsxFileName = \"/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/HomePage/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport FilterMenu from '../../components/FilterMenu/FilterMenu';\nimport BottomBar from '../../components/BottomBar/BottomBar';\nimport { useQuery } from '@apollo/react-hooks';\nimport { PROGRAM_SEARCH } from '../../graphQL/queries';\nimport { Spinner } from '../../components/Spinner/Spinner';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport ProgramContainer from '../../components/ProgramContainer/ProgramContainer';\n\nconst returnVariables = (page, term) => {\n  const itemsPerPage = 10;\n  return {\n    variables: {\n      offset: (page - 1) * itemsPerPage,\n      limit: itemsPerPage,\n      term\n    }\n  };\n};\n\nconst updatePrograms = (page, returnVariables, fetchMore) => {};\n\nconst HomePage = () => {\n  const itemsPerPage = 10;\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n  const term = useSelector(state => state.term, shallowEqual);\n  const {\n    loading,\n    data,\n    fetchMore\n  } = useQuery(PROGRAM_SEARCH, returnVariables(page, term));\n\n  const customFetch = () => {\n    fetchMore({\n      variables: {\n        offset: (page - 1) * itemsPerPage,\n        limit: itemsPerPage\n      },\n      updateQuery: (prev, {\n        fetchMoreResult\n      }) => {}\n    });\n  };\n\n  if (!loading) {\n    console.log(data);\n  }\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, __jsx(FilterMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), loading ? __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }) : __jsx(ProgramContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), __jsx(BottomBar, {\n    page: page,\n    setPage: setPage,\n    itemsPerPage: itemsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }));\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/HomePage/index.tsx"],"names":["React","useState","Layout","FilterMenu","BottomBar","useQuery","PROGRAM_SEARCH","Spinner","useSelector","shallowEqual","ProgramContainer","returnVariables","page","term","itemsPerPage","variables","offset","limit","updatePrograms","fetchMore","HomePage","setPage","state","loading","data","customFetch","updateQuery","prev","fetchMoreResult","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,SAASC,OAAT,QAAwB,kCAAxB;AACA,SAAQC,WAAR,EAAqBC,YAArB,QAAwC,aAAxC;AAEA,OAAOC,gBAAP,MAA6B,oDAA7B;;AAWA,MAAMC,eAAe,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACtC,QAAMC,YAAY,GAAG,EAArB;AACA,SAAO;AACLC,IAAAA,SAAS,EAAE;AACTC,MAAAA,MAAM,EAAE,CAACJ,IAAI,GAAC,CAAN,IAAWE,YADV;AAETG,MAAAA,KAAK,EAAEH,YAFE;AAGTD,MAAAA;AAHS;AADN,GAAP;AAOD,CATD;;AAWA,MAAMK,cAAc,GAAG,CAACN,IAAD,EAAOD,eAAP,EAAwBQ,SAAxB,KAAsC,CAE5D,CAFD;;AAIA,MAAMC,QAA0C,GAAG,MAAM;AACvD,QAAMN,YAAY,GAAG,EAArB;AACA,QAAM;AAAA,OAACF,IAAD;AAAA,OAAOS;AAAP,MAAkBpB,QAAQ,CAAC,CAAD,CAAhC;AAEA,QAAMY,IAAI,GAAGL,WAAW,CAAEc,KAAD,IAAcA,KAAK,CAACT,IAArB,EAA2BJ,YAA3B,CAAxB;AAGA,QAAM;AAAEc,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBL,IAAAA;AAAjB,MAA+Bd,QAAQ,CAC3CC,cAD2C,EAC3BK,eAAe,CAACC,IAAD,EAAOC,IAAP,CADY,CAA7C;;AAIA,QAAMY,WAAW,GAAG,MAAM;AACtBN,IAAAA,SAAS,CAAE;AACTJ,MAAAA,SAAS,EAAE;AACTC,QAAAA,MAAM,EAAE,CAACJ,IAAI,GAAC,CAAN,IAAWE,YADV;AAETG,QAAAA,KAAK,EAAEH;AAFE,OADF;AAINY,MAAAA,WAAW,EAAE,CAACC,IAAD,EAAO;AAACC,QAAAA;AAAD,OAAP,KAA6B,CAE5C;AANQ,KAAF,CAAT;AAQH,GATD;;AAWA,MAAG,CAACL,OAAJ,EAAa;AACXM,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACD;;AAED,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEID,OAAO,GAAG,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAiB,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF5B,EAGE,MAAC,SAAD;AAAW,IAAA,IAAI,EAAEX,IAAjB;AAAuB,IAAA,OAAO,EAAES,OAAhC;AAAyC,IAAA,YAAY,EAAEP,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CAjCD;;AAmCA,eAAeM,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport FilterMenu from '../../components/FilterMenu/FilterMenu';\nimport BottomBar from '../../components/BottomBar/BottomBar';\nimport { useQuery } from '@apollo/react-hooks';\nimport { PROGRAM_SEARCH } from '../../graphQL/queries';\nimport { Spinner } from '../../components/Spinner/Spinner';\nimport {useSelector, shallowEqual} from 'react-redux'\n\nimport ProgramContainer from '../../components/ProgramContainer/ProgramContainer';\n\ntype HomePageProps = {\n  getInitialProps: Function;\n};\n\ninterface HomePageInterface<HomePageProps> extends React.FC<HomePageProps> {\n  getInitialProps?: (ctx: any) => Promise<any>;\n}\n\n\nconst returnVariables = (page, term) => {\n  const itemsPerPage = 10;\n  return {\n    variables: {\n      offset: (page-1) * itemsPerPage,\n      limit: itemsPerPage,\n      term\n    }\n  }\n}\n\nconst updatePrograms = (page, returnVariables, fetchMore) => {\n\n}\n\nconst HomePage: HomePageInterface<HomePageProps> = () => {\n  const itemsPerPage = 10;\n  const [page, setPage] = useState(1);\n\n  const term = useSelector((state: any)=>state.term, shallowEqual)\n\n\n  const { loading, data, fetchMore } = useQuery(\n    PROGRAM_SEARCH, returnVariables(page, term)\n  );\n\n  const customFetch = () => {\n      fetchMore( {\n        variables: {\n          offset: (page-1) * itemsPerPage,\n          limit: itemsPerPage\n        }, updateQuery: (prev, {fetchMoreResult}) => {\n\n        }\n      })\n  }\n\n  if(!loading ){\n    console.log(data)\n  }\n\n  return (\n    <Layout>\n      <FilterMenu />\n      { loading ? <Spinner /> : <ProgramContainer /> }\n      <BottomBar page={page} setPage={setPage} itemsPerPage={itemsPerPage}/>\n    </Layout>\n  );\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}