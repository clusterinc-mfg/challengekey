{"ast":null,"code":"var _jsxFileName = \"/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/HomePage/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport FilterMenu from '../../components/FilterMenu/FilterMenu';\nimport BottomBar from '../../components/BottomBar/BottomBar';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_ALL_PROGRAMS } from '../../graphQL/queries';\nimport { Spinner } from '../../components/Spinner/Spinner';\nimport ProgramContainer from '../../components/ProgramContainer/ProgramContainer';\n\nvar returnVariables = function returnVariables(page) {\n  var itemsPerPage = 10;\n  return {\n    offset: (page - 1) * itemsPerPage,\n    limit: itemsPerPage\n  };\n};\n\nvar HomePage = function HomePage() {\n  var itemsPerPage = 10;\n\n  var _useState = useState(1),\n      page = _useState[0],\n      setPage = _useState[1];\n\n  var _useQuery = useQuery(GET_ALL_PROGRAMS, {\n    variables: returnVariables(page)\n  }),\n      loading = _useQuery.loading,\n      data = _useQuery.data,\n      fetchMore = _useQuery.fetchMore;\n\n  if (!loading) {\n    console.log(data);\n  }\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    onClick: function onClick() {\n      fetchMore({\n        variables: {\n          offset: (page - 1) * itemsPerPage,\n          limit: 10\n        },\n        updateQuery: function updateQuery(prev, _ref) {\n          var fetchMoreResult = _ref.fetchMoreResult;\n          console.log(fetchMoreResult.allPrograms.programs);\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"click\"), __jsx(FilterMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), loading ? __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }) : __jsx(ProgramContainer, {\n    loading: loading,\n    count: data.allPrograms.count,\n    programs: data.allPrograms.programs,\n    term: null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), __jsx(BottomBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }));\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/HomePage/index.tsx"],"names":["React","useState","Layout","FilterMenu","BottomBar","useQuery","GET_ALL_PROGRAMS","Spinner","ProgramContainer","returnVariables","page","itemsPerPage","offset","limit","HomePage","setPage","variables","loading","data","fetchMore","console","log","updateQuery","prev","fetchMoreResult","allPrograms","programs","count"],"mappings":";;AAAA,OAAOA,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAAuBC,QAAvB,QAAuC,qBAAvC;AACA,SAAoBC,gBAApB,QAA4C,uBAA5C;AACA,SAASC,OAAT,QAAwB,kCAAxB;AAEA,OAAOC,gBAAP,MAA6B,oDAA7B;;AAWA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAU;AAChC,MAAMC,YAAY,GAAG,EAArB;AACA,SAAO;AACHC,IAAAA,MAAM,EAAE,CAACF,IAAI,GAAC,CAAN,IAAWC,YADhB;AAEHE,IAAAA,KAAK,EAAEF;AAFJ,GAAP;AAID,CAND;;AAQA,IAAMG,QAA0C,GAAG,SAA7CA,QAA6C,GAAM;AACvD,MAAMH,YAAY,GAAG,EAArB;;AADuD,kBAE/BV,QAAQ,CAAC,CAAD,CAFuB;AAAA,MAEhDS,IAFgD;AAAA,MAE1CK,OAF0C;;AAAA,kBAIlBV,QAAQ,CAC3CC,gBAD2C,EACzB;AAACU,IAAAA,SAAS,EAAEP,eAAe,CAACC,IAAD;AAA3B,GADyB,CAJU;AAAA,MAI/CO,OAJ+C,aAI/CA,OAJ+C;AAAA,MAItCC,IAJsC,aAItCA,IAJsC;AAAA,MAIhCC,SAJgC,aAIhCA,SAJgC;;AAQvD,MAAG,CAACF,OAAJ,EAAY;AACVG,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD;;AAED,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAE,mBAAI;AACnBC,MAAAA,SAAS,CAAE;AACTH,QAAAA,SAAS,EAAE;AACTJ,UAAAA,MAAM,EAAE,CAACF,IAAI,GAAE,CAAP,IAAYC,YADX;AAETE,UAAAA,KAAK,EAAE;AAFE,SADF;AAKTS,QAAAA,WAAW,EAAE,qBAACC,IAAD,QAA8B;AAAA,cAAtBC,eAAsB,QAAtBA,eAAsB;AACzCJ,UAAAA,OAAO,CAACC,GAAR,CAAYG,eAAe,CAACC,WAAhB,CAA4BC,QAAxC;AACD;AAPQ,OAAF,CAAT;AAYH,KAbC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAeI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,EAiBIT,OAAO,GAAG,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACP,MAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEA,OAA3B;AAAqC,IAAA,KAAK,EAAEC,IAAI,CAACO,WAAL,CAAiBE,KAA7D;AAAoE,IAAA,QAAQ,EAAET,IAAI,CAACO,WAAL,CAAiBC,QAA/F;AAAyG,IAAA,IAAI,EAAE,IAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,EAoBE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CADF;AAwBD,CApCD;;AAsCA,eAAeZ,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Layout from '../../components/Layout/Layout';\nimport FilterMenu from '../../components/FilterMenu/FilterMenu';\nimport BottomBar from '../../components/BottomBar/BottomBar';\nimport { useLazyQuery, useQuery } from '@apollo/react-hooks';\nimport { GET_COUNT, GET_ALL_PROGRAMS } from '../../graphQL/queries';\nimport { Spinner } from '../../components/Spinner/Spinner';\n\nimport ProgramContainer from '../../components/ProgramContainer/ProgramContainer';\n\ntype HomePageProps = {\n  getInitialProps: Function;\n};\n\ninterface HomePageInterface<HomePageProps> extends React.FC<HomePageProps> {\n  getInitialProps?: (ctx: any) => Promise<any>;\n}\n\n\nconst returnVariables = (page) => {\n  const itemsPerPage = 10;\n  return {\n      offset: (page-1) * itemsPerPage,\n      limit: itemsPerPage\n    }\n}\n\nconst HomePage: HomePageInterface<HomePageProps> = () => {\n  const itemsPerPage = 10;\n  const [page, setPage] = useState(1);\n\n  const { loading, data, fetchMore } = useQuery(\n    GET_ALL_PROGRAMS, {variables: returnVariables(page)}\n  );\n\n  if(!loading){\n    console.log(data)\n  }\n\n  return (\n    <Layout>\n      <button onClick={()=>{\n        fetchMore( {\n          variables: {\n            offset: (page -1) * itemsPerPage,\n            limit: 10\n          },\n          updateQuery: (prev, {fetchMoreResult} ) => {\n            console.log(fetchMoreResult.allPrograms.programs)\n          }\n        }\n        )\n    \n    \n    }}>click</button>\n        <FilterMenu />\n      {\n        loading ? <Spinner /> : \n        <ProgramContainer loading={loading}  count={data.allPrograms.count} programs={data.allPrograms.programs} term={null} />\n      }\n      <BottomBar />\n    </Layout>\n  );\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}