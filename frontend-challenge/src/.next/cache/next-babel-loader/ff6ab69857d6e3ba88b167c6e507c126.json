{"ast":null,"code":"var _jsxFileName = \"/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/HomePage/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport FilterMenu from '../../components/FilterMenu/FilterMenu';\nimport BottomBar from '../../components/BottomBar/BottomBar';\nimport { useQuery } from '@apollo/react-hooks';\nimport { PROGRAM_SEARCH } from '../../graphQL/queries';\nimport { Spinner } from '../../components/Spinner/Spinner';\nimport { ResultsHeader, ProgramContainer } from './HomePage.styles';\nimport ProgramRow from '../../components/ProgramRow/ProgramRow';\n\nconst renderProgramContainer = (programs, count, term = null) => {\n  const renderPrograms = programs => {\n    return programs.map(program => __jsx(ProgramRow, {\n      key: program.id,\n      program: program,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  };\n\n  const renderHeader = (count, term) => term ? `${count} items found for ${term}` : `${count} items found`;\n\n  return __jsx(ProgramContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(ResultsHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, renderHeader(count, term)), renderPrograms(programs));\n};\n\nconst HomePage = () => {\n  const itemsPerPage = 10;\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n  const {\n    0: term,\n    1: setTerm\n  } = useState(\"\");\n  const {\n    loading,\n    data,\n    fetchMore\n  } = useQuery(PROGRAM_SEARCH, {\n    variables: {\n      data: {\n        offset: (page - 1) * itemsPerPage,\n        limit: itemsPerPage,\n        term: term || null\n      }\n    }\n  });\n\n  const customFetch = () => {\n    fetchMore({\n      variables: {\n        offset: (page - 1) * itemsPerPage,\n        limit: itemsPerPage,\n        term: term || null\n      },\n      updateQuery: (prev, {\n        fetchMoreResult\n      }) => {}\n    });\n  };\n\n  if (!loading) {\n    console.log(data);\n  }\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(FilterMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), loading ? __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }) : renderProgramContainer([], 0, null), __jsx(BottomBar, {\n    page: page,\n    setPage: setPage,\n    itemsPerPage: itemsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }));\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/HomePage/index.tsx"],"names":["React","useState","Layout","FilterMenu","BottomBar","useQuery","PROGRAM_SEARCH","Spinner","ResultsHeader","ProgramContainer","ProgramRow","renderProgramContainer","programs","count","term","renderPrograms","map","program","id","renderHeader","HomePage","itemsPerPage","page","setPage","setTerm","loading","data","fetchMore","variables","offset","limit","customFetch","updateQuery","prev","fetchMoreResult","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport FilterMenu from '../../components/FilterMenu/FilterMenu';\nimport BottomBar from '../../components/BottomBar/BottomBar';\nimport { useQuery } from '@apollo/react-hooks';\nimport { PROGRAM_SEARCH } from '../../graphQL/queries';\nimport { Spinner } from '../../components/Spinner/Spinner';\nimport {useSelector, shallowEqual} from 'react-redux'\nimport { ResultsHeader , ProgramContainer} from './HomePage.styles'\nimport ProgramRow from '../../components/ProgramRow/ProgramRow';\n\n\ntype HomePageProps = {\n  getInitialProps: Function;\n};\n\ninterface HomePageInterface<HomePageProps> extends React.FC<HomePageProps> {\n  getInitialProps?: (ctx: any) => Promise<any>;\n}\n\n\n\nconst renderProgramContainer = (programs, count, term=null) => {\n\n  const renderPrograms = programs => {\n    return programs.map(program => <ProgramRow key={program.id} program={program} />);\n  };\n  \n  const renderHeader = (count, term) => term ? `${count} items found for ${term}` :`${count} items found` \n\n  return (\n    <ProgramContainer>\n    <ResultsHeader>{renderHeader(count, term)}</ResultsHeader> \n        {renderPrograms(programs)}\n    </ProgramContainer>\n  )\n}\n\n\nconst HomePage: HomePageInterface<HomePageProps> = () => {\n  const itemsPerPage = 10;\n  const [page, setPage] = useState(1);\n  const [term, setTerm] = useState(\"\");\n\n  const { loading, data, fetchMore } = useQuery(\n    PROGRAM_SEARCH, { variables: {\n      data: {\n        offset: (page-1) * itemsPerPage,\n        limit: itemsPerPage,\n        term: term || null\n      }\n    }\n  });\n\n  const customFetch = () => {\n      fetchMore( {\n        variables: {\n          offset: (page-1) * itemsPerPage,\n          limit: itemsPerPage,\n          term: term || null\n        }, updateQuery: (prev, {fetchMoreResult}) => {\n\n        }\n      })\n  }\n\n  if(!loading ){\n    console.log(data)\n  }\n\n  return (\n    <Layout>\n      <FilterMenu />\n      { loading ? <Spinner /> : renderProgramContainer([],0,null) }\n      <BottomBar page={page} setPage={setPage} itemsPerPage={itemsPerPage}/>\n    </Layout>\n  );\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}