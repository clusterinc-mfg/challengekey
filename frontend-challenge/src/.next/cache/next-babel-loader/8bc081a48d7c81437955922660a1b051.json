{"ast":null,"code":"var _jsxFileName = \"/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/programDetail/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport { withRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_PROGRAM } from '../../graphQL/queries';\nimport Layout from '../../components/Layout/Layout';\nimport { Spinner } from '../../components/Spinner/Spinner';\nimport SchoolBanner from '../../components/SchoolBanner/SchoolBanner';\n\nvar renderBody = function renderBody(_ref) {\n  var name = _ref.name,\n      costPerCredit = _ref.costPerCredit,\n      programUrl = _ref.programUrl,\n      programDescription = _ref.programDescription,\n      deliveryMode = _ref.deliveryMode,\n      school = _ref.school;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, name)), __jsx(SchoolBanner, {\n    school: school,\n    name: name,\n    costPerCredit: costPerCredit,\n    deliveryMode: deliveryMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }));\n};\n\nvar SchoolPage = function SchoolPage(_ref2) {\n  var router = _ref2.router;\n\n  var _useQuery = useQuery(GET_PROGRAM, {\n    variables: {\n      data: {\n        id: router.query.id\n      }\n    }\n  }),\n      loading = _useQuery.loading,\n      data = _useQuery.data;\n\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, loading ? __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }) : renderBody(data.program)));\n};\n\nexport default withRouter(SchoolPage);","map":{"version":3,"sources":["/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/programDetail/index.tsx"],"names":["React","Head","withRouter","useQuery","GET_PROGRAM","Layout","Spinner","SchoolBanner","renderBody","name","costPerCredit","programUrl","programDescription","deliveryMode","school","SchoolPage","router","variables","data","id","query","loading","program"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,OAAT,QAAwB,kCAAxB;AAEA,OAAOC,YAAP,MAAyB,4CAAzB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAiF;AAAA,MAA/EC,IAA+E,QAA/EA,IAA+E;AAAA,MAAzEC,aAAyE,QAAzEA,aAAyE;AAAA,MAA1DC,UAA0D,QAA1DA,UAA0D;AAAA,MAA9CC,kBAA8C,QAA9CA,kBAA8C;AAAA,MAA1BC,YAA0B,QAA1BA,YAA0B;AAAA,MAAZC,MAAY,QAAZA,MAAY;AAChG,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQL,IAAR,CADJ,CADJ,EAIK,MAAC,YAAD;AAAc,IAAA,MAAM,EAAEK,MAAtB;AAA8B,IAAA,IAAI,EAAEL,IAApC;AAA0C,IAAA,aAAa,EAAEC,aAAzD;AAAwE,IAAA,YAAY,EAAEG,YAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJL,CADJ;AAQH,CATD;;AAcA,IAAME,UAAU,GAAG,SAAbA,UAAa,QAAgB;AAAA,MAAbC,MAAa,SAAbA,MAAa;;AAAA,kBAEPb,QAAQ,CAACC,WAAD,EAAc;AAC9Ca,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,EAAE,EAAEH,MAAM,CAACI,KAAP,CAAaD;AAAnB;AADG;AADmC,GAAd,CAFD;AAAA,MAEzBE,OAFyB,aAEzBA,OAFyB;AAAA,MAEhBH,IAFgB,aAEhBA,IAFgB;;AAQjC,SACE,4BACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,OAAO,GAAG,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAiBb,UAAU,CAACU,IAAI,CAACI,OAAN,CADrC,CADA,CADF;AAOD,CAfD;;AAiBA,eAAepB,UAAU,CAACa,UAAD,CAAzB","sourcesContent":["import React from 'react';\nimport Head from 'next/head';\nimport { withRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_PROGRAM } from '../../graphQL/queries';\nimport Layout from '../../components/Layout/Layout';\nimport { Spinner } from '../../components/Spinner/Spinner';\n\nimport SchoolBanner from '../../components/SchoolBanner/SchoolBanner'\n\nconst renderBody = ({name, costPerCredit, programUrl, programDescription, deliveryMode, school}) => {\n    return(\n        <div>\n            <Head>\n                <title>{name}</title>\n            </Head>\n             <SchoolBanner school={school} name={name} costPerCredit={costPerCredit} deliveryMode={deliveryMode} />\n        </div>\n    )\n}\n\n\n\n\nconst SchoolPage = ({ router }) => {\n\n  const { loading, data } = useQuery(GET_PROGRAM, {\n    variables: {\n      data: { id: router.query.id },\n    },\n  });\n\n  return (\n    <>\n    <Layout>\n      {loading ? <Spinner /> : renderBody(data.program)}\n    </Layout>\n    </>\n    )\n};\n\nexport default withRouter(SchoolPage);\n"]},"metadata":{},"sourceType":"module"}