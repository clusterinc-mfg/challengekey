{"ast":null,"code":"var _jsxFileName = \"/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/HomePage/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport FilterMenu from '../../components/FilterMenu/FilterMenu';\nimport BottomBar from '../../components/BottomBar/BottomBar';\nimport { useQuery } from '@apollo/react-hooks';\nimport { PROGRAM_SEARCH } from '../../graphQL/queries';\nimport { Spinner } from '../../components/Spinner/Spinner';\nimport { ResultsHeader, ProgramContainer } from './HomePage.styles';\nimport ProgramRow from '../../components/ProgramRow/ProgramRow';\n\nvar renderProgramContainer = function renderProgramContainer(programs, count) {\n  var term = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  var renderPrograms = function renderPrograms(programs) {\n    return programs.map(function (program) {\n      return __jsx(ProgramRow, {\n        key: program.id,\n        program: program,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      });\n    });\n  };\n\n  var renderHeader = function renderHeader(count, term) {\n    return term ? \"\".concat(count, \" items found for \").concat(term) : \"\".concat(count, \" items found\");\n  };\n\n  return __jsx(ProgramContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(ResultsHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, renderHeader(count, term)), renderPrograms(programs));\n};\n\nvar HomePage = function HomePage() {\n  var itemsPerPage = 10;\n\n  var _useState = useState(1),\n      page = _useState[0],\n      setPage = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      term = _useState2[0],\n      setTerm = _useState2[1];\n\n  var _useQuery = useQuery(PROGRAM_SEARCH, {\n    variables: {\n      data: {\n        offset: (page - 1) * itemsPerPage,\n        limit: itemsPerPage,\n        term: term || null\n      }\n    }\n  }),\n      loading = _useQuery.loading,\n      data = _useQuery.data,\n      fetchMore = _useQuery.fetchMore;\n\n  var customFetch = function customFetch() {\n    fetchMore({\n      variables: {\n        data: {\n          offset: (page - 1) * itemsPerPage,\n          limit: itemsPerPage,\n          term: term || null\n        }\n      },\n      updateQuery: function updateQuery(prev, _ref) {\n        var fetchMoreResult = _ref.fetchMoreResult;\n        console.log(fetchMoreResult);\n      }\n    });\n  };\n\n  if (!loading) {\n    customFetch();\n  }\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(FilterMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), loading ? __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }) : renderProgramContainer(data.programSearch.programs, data.programSearch.count, term), __jsx(BottomBar, {\n    page: page,\n    setPage: setPage,\n    itemsPerPage: itemsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }));\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/HomePage/index.tsx"],"names":["React","useState","Layout","FilterMenu","BottomBar","useQuery","PROGRAM_SEARCH","Spinner","ResultsHeader","ProgramContainer","ProgramRow","renderProgramContainer","programs","count","term","renderPrograms","map","program","id","renderHeader","HomePage","itemsPerPage","page","setPage","setTerm","variables","data","offset","limit","loading","fetchMore","customFetch","updateQuery","prev","fetchMoreResult","console","log","programSearch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport FilterMenu from '../../components/FilterMenu/FilterMenu';\nimport BottomBar from '../../components/BottomBar/BottomBar';\nimport { useQuery } from '@apollo/react-hooks';\nimport { PROGRAM_SEARCH } from '../../graphQL/queries';\nimport { Spinner } from '../../components/Spinner/Spinner';\nimport {useSelector, shallowEqual} from 'react-redux'\nimport { ResultsHeader , ProgramContainer} from './HomePage.styles'\nimport ProgramRow from '../../components/ProgramRow/ProgramRow';\n\n\ntype HomePageProps = {\n  getInitialProps: Function;\n};\n\ninterface HomePageInterface<HomePageProps> extends React.FC<HomePageProps> {\n  getInitialProps?: (ctx: any) => Promise<any>;\n}\n\n\n\nconst renderProgramContainer = (programs, count, term=null) => {\n\n  const renderPrograms = programs => {\n    return programs.map(program => <ProgramRow key={program.id} program={program} />);\n  };\n  \n  const renderHeader = (count, term) => term ? `${count} items found for ${term}` :`${count} items found` \n\n  return (\n    <ProgramContainer>\n    <ResultsHeader>{renderHeader(count, term)}</ResultsHeader> \n        {renderPrograms(programs)}\n    </ProgramContainer>\n  )\n}\n\n\nconst HomePage: HomePageInterface<HomePageProps> = () => {\n  const itemsPerPage = 10;\n  const [page, setPage] = useState(1);\n  const [term, setTerm] = useState(\"\");\n\n  const { loading, data, fetchMore } = useQuery(\n    PROGRAM_SEARCH, { variables: {\n      data: {\n        offset: (page-1) * itemsPerPage,\n        limit: itemsPerPage,\n        term: term || null\n      }\n    }\n  });\n\n  const customFetch = () => {\n      fetchMore( {\n        variables: {\n          data: {\n            offset: (page-1) * itemsPerPage,\n            limit: itemsPerPage,\n            term: term || null\n          }\n        }, updateQuery: (prev, {fetchMoreResult}) => {\n           console.log(fetchMoreResult)\n        }\n      })\n  }\n\n  if(!loading ){\n    customFetch()\n  }\n\n  return (\n    <Layout>\n      <FilterMenu />\n      { loading ? <Spinner /> : renderProgramContainer(data.programSearch.programs,data.programSearch.count,term) }\n      <BottomBar page={page} setPage={setPage} itemsPerPage={itemsPerPage}/>\n    </Layout>\n  );\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}