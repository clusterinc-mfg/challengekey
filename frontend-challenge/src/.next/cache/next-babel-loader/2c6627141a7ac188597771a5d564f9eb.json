{"ast":null,"code":"import gql from 'graphql-tag';\nexport const GET_COUNT = gql`\n    query programsCount {\n        programsCount\n    }\n`;\nexport const GET_ALL_PROGRAMS = gql`\n    query allPrograms($offset: Float, $limit: Float) {\n    allPrograms(offset: $offset, limit: $limit){\n        name\n        degreeType\n        deliveryMode\n        school{\n        name\n        totalEnrollment\n        }\n    }\n    }\n`;\nexport const GET_PROGRAM = gql`\n    query program($data: ProgramInput){\n        program(data: $data){\n            id\n            name\n            programURL\n            costPerDegree\n            costPerCredit\n            timeToComplete\n            requiredCredits\n            deliveryMode\n            school{\n                name\n                schoolLogo\n                backgroundColor\n                schoolDescription\n                gradientcolor\n                engineeringDevisionDescription\n                costPerUnit\n            }\n        }\n    }\n`;","map":{"version":3,"sources":["/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/graphQL/queries.ts"],"names":["gql","GET_COUNT","GET_ALL_PROGRAMS","GET_PROGRAM"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAEA,OAAO,MAAMC,SAAS,GAAGD,GAAI;;;;CAAtB;AAMP,OAAO,MAAME,gBAAgB,GAAGF,GAAI;;;;;;;;;;;;CAA7B;AAmBP,OAAO,MAAMG,WAAW,GAAGH,GAAI;;;;;;;;;;;;;;;;;;;;;;CAAxB","sourcesContent":["import gql from 'graphql-tag';\n\nexport const GET_COUNT = gql`\n    query programsCount {\n        programsCount\n    }\n`\n\nexport const GET_ALL_PROGRAMS = gql`\n    query allPrograms($offset: Float, $limit: Float) {\n    allPrograms(offset: $offset, limit: $limit){\n        name\n        degreeType\n        deliveryMode\n        school{\n        name\n        totalEnrollment\n        }\n    }\n    }\n`\n\ntype ProgramInput = {\n    id: String\n}\n\n\nexport const GET_PROGRAM = gql`\n    query program($data: ProgramInput){\n        program(data: $data){\n            id\n            name\n            programURL\n            costPerDegree\n            costPerCredit\n            timeToComplete\n            requiredCredits\n            deliveryMode\n            school{\n                name\n                schoolLogo\n                backgroundColor\n                schoolDescription\n                gradientcolor\n                engineeringDevisionDescription\n                costPerUnit\n            }\n        }\n    }\n`"]},"metadata":{},"sourceType":"module"}