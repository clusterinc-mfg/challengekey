{"ast":null,"code":"var _jsxFileName = \"/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/HomePage/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport FilterMenu from '../../components/FilterMenu/FilterMenu';\nimport BottomBar from '../../components/BottomBar/BottomBar';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_COUNT } from '../../graphQL/queries';\n\nvar HomePage = function HomePage() {\n  var itemsPerPage = 10;\n\n  var _useState = useState(1),\n      page = _useState[0],\n      setPage = _useState[1];\n\n  var _useQuery = useQuery(GET_COUNT),\n      loadingCount = _useQuery.loading,\n      programsCount = _useQuery.data.programsCount;\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, __jsx(FilterMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), !loadingCount ? __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, programsCount) : __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"loading...\"), __jsx(BottomBar, {\n    page: page,\n    setPage: setPage,\n    numberOfPages: Math.ceil(count / itemsPerPage),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }));\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/HomePage/index.tsx"],"names":["React","useState","Layout","FilterMenu","BottomBar","useQuery","GET_COUNT","HomePage","itemsPerPage","page","setPage","loadingCount","loading","programsCount","data","Math","ceil","count"],"mappings":";;AACA,OAAOA,KAAP,IAA0BC,QAA1B,QAAyC,OAAzC;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAAsBC,QAAtB,QAAqC,qBAArC;AACA,SAAQC,SAAR,QAA0C,uBAA1C;;AAaA,IAAMC,QAA0C,GAAG,SAA7CA,QAA6C,GAAM;AACvD,MAAMC,YAAY,GAAG,EAArB;;AADuD,kBAE/BP,QAAQ,CAAC,CAAD,CAFuB;AAAA,MAEhDQ,IAFgD;AAAA,MAE1CC,OAF0C;;AAAA,kBAIAL,QAAQ,CAACC,SAAD,CAJR;AAAA,MAIvCK,YAJuC,aAIhDC,OAJgD;AAAA,MAIlBC,aAJkB,aAIzBC,IAJyB,CAIlBD,aAJkB;;AAQvD,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEC,CAACF,YAAD,GAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,aAAJ,CAAhB,GAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAF1C,EAME,MAAC,SAAD;AACE,IAAA,IAAI,EAAEJ,IADR;AAEE,IAAA,OAAO,EAAEC,OAFX;AAGE,IAAA,aAAa,EAAEK,IAAI,CAACC,IAAL,CAAUC,KAAK,GAAGT,YAAlB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAcD,CAtBD;;AA4BA,eAAeD,QAAf","sourcesContent":["\nimport React, {useEffect, useState} from 'react';\nimport axios from 'axios'\nimport Layout from '../../components/Layout/Layout'\nimport FilterMenu from '../../components/FilterMenu/FilterMenu'\nimport BottomBar from '../../components/BottomBar/BottomBar'\nimport {useLazyQuery, useQuery} from '@apollo/react-hooks'\nimport {GET_COUNT, GET_ALL_PROGRAMS} from '../../graphQL/queries'\n\nimport ProgramContainer from '../../components/ProgramContainer/ProgramContainer'\n\ntype HomePageProps = {\n  getInitialProps: Function\n \n}\n\ninterface HomePageInterface<HomePageProps> extends React.FC<HomePageProps> {\n  getInitialProps?: (ctx: any) => Promise<any>\n}\n\nconst HomePage: HomePageInterface<HomePageProps> = () => {\n  const itemsPerPage = 10\n  const [page, setPage] = useState(1)\n\n  const {loading: loadingCount, data: {programsCount}} = useQuery(GET_COUNT)\n  \n \n\n  return (\n    <Layout>\n      <FilterMenu />\n    {!loadingCount ? <p>{programsCount}</p> : <p>loading...</p>}\n\n\n      {/* <ProgramContainer /> */}\n      <BottomBar \n        page={page} \n        setPage={setPage} \n        numberOfPages={Math.ceil(count / itemsPerPage)}\n      />\n    </Layout>\n  )\n}\n\n\n\n\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}