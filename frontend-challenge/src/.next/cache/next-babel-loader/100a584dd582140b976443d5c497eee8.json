{"ast":null,"code":"var _jsxFileName = \"/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/components/BottomBar/BottomBar.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Container, Spacer, Button, ButtonContainer } from './BottomBar.styles';\n/* \n    TODO: Render out buttons:\n\n          There should be no more then 4 buttons displayed.\n\n          If there are more then or equal to 4 pages, then the last numbered button should show\n          the final page number.\n          \n          If there are less then 4 pages, only display the number of buttons\n          necissary\n\n          If the user is on the first page. Do not show the previous button.\n          If the user is on the last page.  Do not show the next button.\n          If the user is within the last 4 pages, Do not show the spacer.\n*/\n\nconst BottomBar = ({\n  page,\n  setPage,\n  itemsPerPage\n}) => {\n  const moveBack = () => setPage(page - 1);\n\n  const moveForward = () => setPage(page + 1);\n\n  const renderButtons = () => {\n    const numberOfPages = Math.ceil(page / itemsPerPage);\n\n    if (page === 1) {\n      return [];\n    } else {\n      const buttons = [];\n      page !== 1 && buttons.push(__jsx(Button, {\n        isEnd: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \" \", \"< Prev\"));\n      page >= numberOfPages - 4 && buttons.push(__jsx(Button, {\n        isEnd: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \" \", \"Next >\"));\n    }\n  };\n\n  return __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(ButtonContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(Button, {\n    isEnd: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \" \", \"< Prev\"), __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"1\"), __jsx(Button, {\n    isActive: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"2\"), __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"3\"), __jsx(Spacer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"...\"), __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"27\"), __jsx(Button, {\n    isEnd: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Next >\")));\n};\n\nexport default BottomBar;","map":{"version":3,"sources":["/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/components/BottomBar/BottomBar.tsx"],"names":["React","Container","Spacer","Button","ButtonContainer","BottomBar","page","setPage","itemsPerPage","moveBack","moveForward","renderButtons","numberOfPages","Math","ceil","buttons","push"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,SAAR,EAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,eAAnC,QAAyD,oBAAzD;AAEA;;;;;;;;;;;;;;;;AAkBA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA;AAAhB,CAAD,KAAmC;AAEjD,QAAMC,QAAQ,GAAG,MAAMF,OAAO,CAACD,IAAI,GAAG,CAAR,CAA9B;;AACA,QAAMI,WAAW,GAAG,MAAMH,OAAO,CAACD,IAAI,GAAG,CAAR,CAAjC;;AAEA,QAAMK,aAAa,GAAG,MAAM;AACxB,UAAMC,aAAa,GAAGC,IAAI,CAACC,IAAL,CAAUR,IAAI,GAAGE,YAAjB,CAAtB;;AAEA,QAAGF,IAAI,KAAK,CAAZ,EAAc;AACV,aAAO,EAAP;AACH,KAFD,MAEK;AACD,YAAMS,OAAO,GAAG,EAAhB;AACAT,MAAAA,IAAI,KAAK,CAAT,IAAcS,OAAO,CAACC,IAAR,CAAa,MAAC,MAAD;AAAQ,QAAA,KAAK,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAgB,QAAhB,CAAb,CAAd;AAIAV,MAAAA,IAAI,IAAKM,aAAa,GAAG,CAAzB,IAA+BG,OAAO,CAACC,IAAR,CAAa,MAAC,MAAD;AAAQ,QAAA,KAAK,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAgB,QAAhB,CAAb,CAA/B;AACH;AAEJ,GAdD;;AAiBA,SACI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAgB,QAAhB,CADJ,EAEI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,EAGI,MAAC,MAAD;AAAQ,IAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ,EAII,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ,EAKI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALJ,EAMI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANJ,EAOI,MAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAe,QAAf,CAPJ,CADJ,CADJ;AAaH,CAnCD;;AAqCA,eAAeX,SAAf","sourcesContent":["import React from 'react'\n\nimport {Container, Spacer, Button, ButtonContainer} from './BottomBar.styles'\n\n/* \n    TODO: Render out buttons:\n\n          There should be no more then 4 buttons displayed.\n\n          If there are more then or equal to 4 pages, then the last numbered button should show\n          the final page number.\n          \n          If there are less then 4 pages, only display the number of buttons\n          necissary\n\n          If the user is on the first page. Do not show the previous button.\n          If the user is on the last page.  Do not show the next button.\n          If the user is within the last 4 pages, Do not show the spacer.\n*/\n\n\n\nconst BottomBar = ({page, setPage, itemsPerPage}) => {\n\n    const moveBack = () => setPage(page - 1)\n    const moveForward = () => setPage(page + 1)\n\n    const renderButtons = () => {\n        const numberOfPages = Math.ceil(page / itemsPerPage)\n\n        if(page === 1){\n            return []\n        }else{\n            const buttons = []\n            page !== 1 && buttons.push(<Button isEnd> {\"< Prev\"}</Button>)\n    \n    \n    \n            page >= (numberOfPages - 4) && buttons.push(<Button isEnd> {\"Next >\"}</Button>)\n        }\n  \n    }\n\n\n    return(\n        <Container>\n            <ButtonContainer>\n                <Button isEnd> {\"< Prev\"}</Button>\n                <Button>1</Button>\n                <Button isActive>2</Button>\n                <Button>3</Button>\n                <Spacer>...</Spacer>\n                <Button>27</Button>\n                <Button isEnd>{\"Next >\"}</Button>\n            </ButtonContainer>\n        </Container>\n    )\n}\n\nexport default BottomBar"]},"metadata":{},"sourceType":"module"}