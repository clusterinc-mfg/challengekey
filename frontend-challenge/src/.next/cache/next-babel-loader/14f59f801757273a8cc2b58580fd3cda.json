{"ast":null,"code":"var _jsxFileName = \"/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/programDetail/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport { withRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_PROGRAM } from '../../graphQL/queries';\nimport Layout from '../../components/Layout/Layout';\nimport { Spinner } from '../../components/Spinner/Spinner';\nimport SchoolBanner from '../../components/SchoolBanner/SchoolBanner';\nimport ProgramInfoBanner from '../../components/ProgramInfoBanner/ProgramInfoBanner';\nimport ProgramInfo from '../../components/ProgramInfo/ProgramInfo';\n\nconst calcDeliveryModeColor = (color1, color2, percent) => {\n  const parseHex = hex => hex.length === 4 ? hex.split(\"\") : [hex.substr(0, 3), hex.substr(3, 2), hex.substr(5, 7)];\n\n  console.log(parseHex(\"#013\"));\n  console.log(parseHex('#112233'));\n};\n\nconst renderBody = ({\n  name,\n  costPerCredit,\n  programUrl,\n  programDescription,\n  deliveryMode,\n  school\n}) => {\n  calcDeliveryModeColor(\"a\", \"b\", .5);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, name)), __jsx(SchoolBanner, {\n    school: school,\n    name: name,\n    costPerCredit: costPerCredit,\n    deliveryMode: deliveryMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), __jsx(ProgramInfoBanner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), __jsx(ProgramInfo, {\n    programDescription: programDescription,\n    schoolDescription: school.schoolDescription,\n    schoolName: school.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }));\n};\n\nconst SchoolPage = ({\n  router\n}) => {\n  const {\n    loading,\n    data\n  } = useQuery(GET_PROGRAM, {\n    variables: {\n      data: {\n        id: router.query.id\n      }\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, loading ? __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }) : renderBody(data.program)));\n};\n\nexport default withRouter(SchoolPage);","map":{"version":3,"sources":["/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/programDetail/index.tsx"],"names":["React","Head","withRouter","useQuery","GET_PROGRAM","Layout","Spinner","SchoolBanner","ProgramInfoBanner","ProgramInfo","calcDeliveryModeColor","color1","color2","percent","parseHex","hex","length","split","substr","console","log","renderBody","name","costPerCredit","programUrl","programDescription","deliveryMode","school","schoolDescription","SchoolPage","router","loading","data","variables","id","query","program"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,OAAT,QAAwB,kCAAxB;AAEA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,iBAAP,MAA8B,sDAA9B;AACA,OAAOC,WAAP,MAAwB,0CAAxB;;AAKA,MAAMC,qBAAqB,GAAG,CAACC,MAAD,EAASC,MAAT,EAAiBC,OAAjB,KAA6B;AACvD,QAAMC,QAAQ,GAAIC,GAAD,IAAUA,GAAG,CAACC,MAAJ,KAAe,CAAf,GAAmBD,GAAG,CAACE,KAAJ,CAAU,EAAV,CAAnB,GAAmC,CAACF,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAa,CAAb,CAAD,EAAkBH,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAa,CAAb,CAAlB,EAAmCH,GAAG,CAACG,MAAJ,CAAW,CAAX,EAAa,CAAb,CAAnC,CAA9D;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAAC,MAAD,CAApB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAAC,SAAD,CAApB;AACH,CAJD;;AAMA,MAAMO,UAAU,GAAG,CAAC;AAClBC,EAAAA,IADkB;AAElBC,EAAAA,aAFkB;AAGlBC,EAAAA,UAHkB;AAIlBC,EAAAA,kBAJkB;AAKlBC,EAAAA,YALkB;AAMlBC,EAAAA;AANkB,CAAD,KAOb;AAGFjB,EAAAA,qBAAqB,CAAC,GAAD,EAAK,GAAL,EAAS,EAAT,CAArB;AAEF,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQY,IAAR,CADF,CADF,EAIE,MAAC,YAAD;AACE,IAAA,MAAM,EAAEK,MADV;AAEE,IAAA,IAAI,EAAEL,IAFR;AAGE,IAAA,aAAa,EAAEC,aAHjB;AAIE,IAAA,YAAY,EAAEG,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAUE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE,MAAC,WAAD;AACE,IAAA,kBAAkB,EAAED,kBADtB;AAEE,IAAA,iBAAiB,EAAEE,MAAM,CAACC,iBAF5B;AAGE,IAAA,UAAU,EAAED,MAAM,CAACL,IAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AAmBD,CA/BD;;AAiCA,MAAMO,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACjC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoB7B,QAAQ,CAACC,WAAD,EAAc;AAC9C6B,IAAAA,SAAS,EAAE;AACTD,MAAAA,IAAI,EAAE;AAAEE,QAAAA,EAAE,EAAEJ,MAAM,CAACK,KAAP,CAAaD;AAAnB;AADG;AADmC,GAAd,CAAlC;AAMA,SACE,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASH,OAAO,GAAG,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAiBV,UAAU,CAACW,IAAI,CAACI,OAAN,CAA3C,CADF,CADF;AAKD,CAZD;;AAcA,eAAelC,UAAU,CAAC2B,UAAD,CAAzB","sourcesContent":["import React from 'react';\nimport Head from 'next/head';\nimport { withRouter } from 'next/router';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_PROGRAM } from '../../graphQL/queries';\nimport Layout from '../../components/Layout/Layout';\nimport { Spinner } from '../../components/Spinner/Spinner';\n\nimport SchoolBanner from '../../components/SchoolBanner/SchoolBanner';\nimport ProgramInfoBanner from '../../components/ProgramInfoBanner/ProgramInfoBanner'\nimport ProgramInfo from '../../components/ProgramInfo/ProgramInfo'\n\n\n\n\nconst calcDeliveryModeColor = (color1, color2, percent) => {\n    const parseHex = (hex) =>  hex.length === 4 ? hex.split(\"\") : [hex.substr(0,3), hex.substr(3,2), hex.substr(5,7)]\n    console.log(parseHex(\"#013\"))\n    console.log(parseHex('#112233'))\n}\n\nconst renderBody = ({\n  name,\n  costPerCredit,\n  programUrl,\n  programDescription,\n  deliveryMode,\n  school,\n}) => {\n\n\n    calcDeliveryModeColor(\"a\",\"b\",.5)\n\n  return (\n    <div>\n      <Head>\n        <title>{name}</title>\n      </Head>\n      <SchoolBanner\n        school={school}\n        name={name}\n        costPerCredit={costPerCredit}\n        deliveryMode={deliveryMode}\n      />\n      <ProgramInfoBanner />\n      <ProgramInfo \n        programDescription={programDescription} \n        schoolDescription={school.schoolDescription}\n        schoolName={school.name} \n    />\n    </div>\n  );\n};\n\nconst SchoolPage = ({ router }) => {\n  const { loading, data } = useQuery(GET_PROGRAM, {\n    variables: {\n      data: { id: router.query.id },\n    },\n  });\n\n  return (\n    <>\n      <Layout>{loading ? <Spinner /> : renderBody(data.program)}</Layout>\n    </>\n  );\n};\n\nexport default withRouter(SchoolPage);\n"]},"metadata":{},"sourceType":"module"}