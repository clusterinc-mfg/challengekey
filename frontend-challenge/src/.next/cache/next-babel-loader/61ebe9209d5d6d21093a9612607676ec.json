{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar _jsxFileName = \"/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/HomePage/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Layout from '../../components/Layout/Layout';\nimport FilterMenu from '../../components/FilterMenu/FilterMenu';\nimport { GET_COUNT } from '../../graphQL/queries';\n\nconst HomePage = () => {\n  const itemsPerPage = 10;\n  const {\n    0: page,\n    1: setPage\n  } = useState(1); // const [getAllPrograms, {loading, data, fetchMore}] = useLazyQuery(GET_ALL_PROGRAMS, {\n  //   variables: {\n  //     offset: page-1,\n  //     limit: 10\n  //   },\n  //   fetchPolicy: \"cache-and-network\"\n  // })\n\n  useEffect(() => {// getAllPrograms()\n  }, []); // if(data && data.allPrograms){\n  //  console.log(data.allPrograms)\n  // }\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(FilterMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n};\n\nconst getQuery = (QUERY, params) => new _Promise(async (res, rej) => {\n  const data = await axios({\n    url: \"http://localhost:4000/gql\",\n    method: \"post\",\n    data: {\n      query: GET_COUNT\n    }\n  });\n  res(data);\n});\n\nHomePage.getInitialProps = async ctx => {\n  let resp = await getQuery(GET_COUNT);\n  console.log(resp.data);\n  const count = resp.data.data.count;\n  return {\n    count: 1\n  };\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/HomePage/index.tsx"],"names":["React","useEffect","useState","axios","Layout","FilterMenu","GET_COUNT","HomePage","itemsPerPage","page","setPage","getQuery","QUERY","params","res","rej","data","url","method","query","getInitialProps","ctx","resp","console","log","count"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AAGA,SAAQC,SAAR,QAA0C,uBAA1C;;AAaA,MAAMC,QAA0C,GAAG,MAAM;AACvD,QAAMC,YAAY,GAAG,EAArB;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAAC,CAAD,CAAhC,CAFuD,CAIvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAI,CACZ;AACD,GAFQ,EAEN,EAFM,CAAT,CAZuD,CAgBvD;AACA;AACA;;AAIA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAWD,CAjCD;;AAmCA,MAAMU,QAAQ,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAoB,aAAY,OAAOC,GAAP,EAAYC,GAAZ,KAAmB;AAClE,QAAMC,IAAQ,GAAG,MAAMb,KAAK,CAAC;AAC3Bc,IAAAA,GAAG,EAAE,2BADsB;AAE3BC,IAAAA,MAAM,EAAE,MAFmB;AAG3BF,IAAAA,IAAI,EAAE;AACJG,MAAAA,KAAK,EAAEb;AADH;AAHqB,GAAD,CAA5B;AAOAQ,EAAAA,GAAG,CAACE,IAAD,CAAH;AACD,CAToC,CAArC;;AAWAT,QAAQ,CAACa,eAAT,GAA2B,MAAMC,GAAN,IAAc;AAEvC,MAAIC,IAAQ,GAAG,MAAMX,QAAQ,CAACL,SAAD,CAA7B;AACAiB,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACN,IAAjB;AACA,QAAMS,KAAK,GAAGH,IAAI,CAACN,IAAL,CAAUA,IAAV,CAAeS,KAA7B;AAEA,SAAO;AAACA,IAAAA,KAAK,EAAC;AAAP,GAAP;AACD,CAPD;;AAUA,eAAelB,QAAf","sourcesContent":["\nimport React, {useEffect, useState} from 'react';\nimport axios from 'axios'\nimport Layout from '../../components/Layout/Layout'\nimport FilterMenu from '../../components/FilterMenu/FilterMenu'\nimport BottomBar from '../../components/BottomBar/BottomBar'\nimport {useLazyQuery} from '@apollo/react-hooks'\nimport {GET_COUNT, GET_ALL_PROGRAMS} from '../../graphQL/queries'\n\nimport ProgramContainer from '../../components/ProgramContainer/ProgramContainer'\n\ntype HomePageProps = {\n  getInitialProps: Function\n \n}\n\ninterface HomePageInterface<HomePageProps> extends React.FC<HomePageProps> {\n  getInitialProps?: (ctx: any) => Promise<any>\n}\n\nconst HomePage: HomePageInterface<HomePageProps> = () => {\n  const itemsPerPage = 10\n  const [page, setPage] = useState(1)\n  \n  // const [getAllPrograms, {loading, data, fetchMore}] = useLazyQuery(GET_ALL_PROGRAMS, {\n  //   variables: {\n  //     offset: page-1,\n  //     limit: 10\n  //   },\n  //   fetchPolicy: \"cache-and-network\"\n  // })\n\n  useEffect(()=>{\n    // getAllPrograms()\n  }, [])\n\n  // if(data && data.allPrograms){\n  //  console.log(data.allPrograms)\n  // }\n\n  \n\n  return (\n    <Layout>\n      <FilterMenu />\n      {/* <ProgramContainer /> */}\n      {/* <BottomBar \n        page={page} \n        setPage={setPage} \n        numberOfPages={Math.ceil(count / itemsPerPage)}\n      /> */}\n    </Layout>\n  )\n}\n\nconst getQuery = (QUERY, params?) => new Promise(async (res, rej)=> {\n  const data:any = await axios({\n    url: \"http://localhost:4000/gql\",\n    method: \"post\",\n    data: {\n      query: GET_COUNT\n    }\n  })\n  res(data)\n})\n\nHomePage.getInitialProps = async(ctx) => {\n  \n  let resp:any = await getQuery(GET_COUNT)\n  console.log(resp.data)\n  const count = resp.data.data.count\n\n  return {count:1}\n}\n\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}