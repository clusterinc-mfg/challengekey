{"ast":null,"code":"var _jsxFileName = \"/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/HomePage/index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport FilterMenu from '../../components/FilterMenu/FilterMenu';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_COUNT, GET_ALL_PROGRAMS } from '../../graphQL/queries';\nimport { Spinner } from '../../components/Spinner/Spinner';\n\nconst HomePage = () => {\n  const itemsPerPage = 10;\n  const {\n    0: page,\n    1: setPage\n  } = useState(1);\n  const {\n    loading: loadingCount,\n    data: count\n  } = useQuery(GET_COUNT);\n  const {\n    loading: loadingPrograms,\n    data: programs\n  } = useQuery(GET_ALL_PROGRAMS);\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(FilterMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      flexGrow: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })));\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/bradtudor/Documents/interview_challenges/frontend-challenge/src/pages/HomePage/index.tsx"],"names":["React","useState","Layout","FilterMenu","useQuery","GET_COUNT","GET_ALL_PROGRAMS","Spinner","HomePage","itemsPerPage","page","setPage","loading","loadingCount","data","count","loadingPrograms","programs","display","flexGrow"],"mappings":";;AAAA,OAAOA,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AAEA,SAAuBC,QAAvB,QAAuC,qBAAvC;AACA,SAASC,SAAT,EAAoBC,gBAApB,QAA4C,uBAA5C;AACA,SAAQC,OAAR,QAAsB,kCAAtB;;AAYA,MAAMC,QAA0C,GAAG,MAAM;AACvD,QAAMC,YAAY,GAAG,EAArB;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBV,QAAQ,CAAC,CAAD,CAAhC;AAEA,QAAM;AAAEW,IAAAA,OAAO,EAAEC,YAAX;AAAyBC,IAAAA,IAAI,EAAEC;AAA/B,MAAyCX,QAAQ,CAACC,SAAD,CAAvD;AACA,QAAM;AAAEO,IAAAA,OAAO,EAAEI,eAAX;AAA4BF,IAAAA,IAAI,EAAEG;AAAlC,MAA+Cb,QAAQ,CAAEE,gBAAF,CAA7D;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE;AAAK,IAAA,KAAK,EACR;AACEY,MAAAA,OAAO,EAAE,MADX;AAEEC,MAAAA,QAAQ,EAAE;AAFZ,KADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CATF,CADF;AA2BD,CAlCD;;AAoCA,eAAeX,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Layout from '../../components/Layout/Layout';\nimport FilterMenu from '../../components/FilterMenu/FilterMenu';\nimport BottomBar from '../../components/BottomBar/BottomBar';\nimport { useLazyQuery, useQuery } from '@apollo/react-hooks';\nimport { GET_COUNT, GET_ALL_PROGRAMS } from '../../graphQL/queries';\nimport {Spinner} from '../../components/Spinner/Spinner'\n\nimport ProgramContainer from '../../components/ProgramContainer/ProgramContainer';\n\ntype HomePageProps = {\n  getInitialProps: Function;\n};\n\ninterface HomePageInterface<HomePageProps> extends React.FC<HomePageProps> {\n  getInitialProps?: (ctx: any) => Promise<any>;\n}\n\nconst HomePage: HomePageInterface<HomePageProps> = () => {\n  const itemsPerPage = 10;\n  const [page, setPage] = useState(1);\n\n  const { loading: loadingCount, data: count } = useQuery(GET_COUNT);\n  const { loading: loadingPrograms, data: programs } = useQuery( GET_ALL_PROGRAMS );\n\n  return (\n    <Layout>\n      <FilterMenu />\n      {/* {!loadingCount ? <p>{count.programsCount}</p> : <p>loading...</p>}\n\n      <ProgramContainer\n        isLoading={loadingCount && loadingPrograms}\n        count={count.programsCount}\n        programs={programs}\n      /> */}\n      <div style={\n        {\n          display: \"flex\",\n          flexGrow: 1\n        }\n      }>\n          <Spinner/>\n      </div>\n      \n\n      {/* <BottomBar \n        page={page} \n        setPage={setPage} \n        numberOfPages={Math.ceil(count / itemsPerPage)}\n      /> */}\n    </Layout>\n  );\n};\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}