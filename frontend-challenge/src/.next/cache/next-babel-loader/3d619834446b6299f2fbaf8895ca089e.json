{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { all } from 'redux-saga/effects';\n\nfunction rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexport default rootSaga;","map":{"version":3,"sources":["/Users/bradtudor/Documents/interview_challenges/frontend-challenge key/src/redux/rootSaga.ts"],"names":["rootSaga","all"],"mappings":";;;;yBAEUA,Q;;AAFV,SAASC,GAAT,QAAoB,oBAApB;;AAEA,SAAUD,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMC,GAAG,CAAC,EAAD,CAAT;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAeD,QAAf","sourcesContent":["import { all } from 'redux-saga/effects';\n\nfunction* rootSaga() {\n  yield all([]);\n}\n\nexport default rootSaga;\n"]},"metadata":{},"sourceType":"module"}