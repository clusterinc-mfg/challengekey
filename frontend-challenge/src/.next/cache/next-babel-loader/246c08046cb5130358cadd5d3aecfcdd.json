{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar _jsxFileName = \"/Users/brad/Documents/interview_challenges/frontend-challenge/src/pages/HomePage/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport axios from 'axios';\nimport Layout from '../../components/Layout/Layout';\nimport Header from '../../components/Header/Header';\nimport FilterMenu from '../../components/FilterMenu/FilterMenu';\nimport BottomBar from '../../components/BottomBar/BottomBar';\nimport ProgramRow from '../../components/ProgramRow/ProgramRow';\nimport { GET_COUNT } from '../../graphQL/queries';\nimport { ProgramContainer, ResultsHeader } from './HomePage.styles';\n\nvar HomePage = function HomePage() {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), __jsx(FilterMenu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), __jsx(ProgramContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(ResultsHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"300 programs found for engineering!\"), __jsx(ProgramRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), __jsx(ProgramRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), __jsx(ProgramRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), __jsx(ProgramRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), __jsx(ProgramRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), __jsx(ProgramRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), __jsx(ProgramRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), __jsx(ProgramRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), __jsx(ProgramRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), __jsx(ProgramRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), __jsx(BottomBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n};\n\nvar getQuery = function getQuery(QUERY, params) {\n  return new _Promise(function _callee(res, rej) {\n    var data;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios({\n              url: \"http://localhost:4000/gql\",\n              method: \"post\",\n              data: {\n                query: GET_COUNT\n              }\n            }));\n\n          case 2:\n            data = _context.sent;\n            res(data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  });\n};\n\nHomePage.getInitialProps = function _callee2(ctx) {\n  var resp;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(getQuery(GET_COUNT));\n\n        case 2:\n          resp = _context2.sent;\n          console.log(resp.data.data.programsCount);\n          return _context2.abrupt(\"return\", {});\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/brad/Documents/interview_challenges/frontend-challenge/src/pages/HomePage/index.tsx"],"names":["React","axios","Layout","Header","FilterMenu","BottomBar","ProgramRow","GET_COUNT","ProgramContainer","ResultsHeader","HomePage","getQuery","QUERY","params","res","rej","url","method","data","query","getInitialProps","ctx","resp","console","log","programsCount"],"mappings":";;;;AACA,OAAOA,KAAP,MAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AAEA,SAAQC,SAAR,QAAwB,uBAAxB;AAEA,SAASC,gBAAT,EAA2BC,aAA3B,QAA+C,mBAA/C;;AAUA,IAAMC,QAA0C,GAAG,SAA7CA,QAA6C,GAAM;AAGvD,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAGA,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADJ,EAEI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAQI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EASI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAUI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAWI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CAHA,EAgBA,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBA,CADF;AAoBD,CAvBD;;AAyBA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,MAAR;AAAA,SAAoB,aAAY,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACxBd,KAAK,CAAC;AAC3Be,cAAAA,GAAG,EAAE,2BADsB;AAE3BC,cAAAA,MAAM,EAAE,MAFmB;AAG3BC,cAAAA,IAAI,EAAE;AACJC,gBAAAA,KAAK,EAAEZ;AADH;AAHqB,aAAD,CADmB;;AAAA;AACzCW,YAAAA,IADyC;AAQ/CJ,YAAAA,GAAG,CAACI,IAAD,CAAH;;AAR+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAZ,CAApB;AAAA,CAAjB;;AAWAR,QAAQ,CAACU,eAAT,GAA2B,kBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAE8BV,QAAQ,CAACJ,SAAD,CAFtC;;AAAA;AAErBe,UAAAA,IAFqB;AAIzBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACJ,IAAL,CAAUA,IAAV,CAAeO,aAA3B;AAJyB,4CAMlB,EANkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAUA,eAAef,QAAf","sourcesContent":["\nimport React, {useEffect} from 'react';\nimport axios from 'axios'\nimport Layout from '../../components/Layout/Layout'\nimport Header from '../../components/Header/Header'\nimport FilterMenu from '../../components/FilterMenu/FilterMenu'\nimport BottomBar from '../../components/BottomBar/BottomBar'\nimport ProgramRow from '../../components/ProgramRow/ProgramRow'\n\nimport {GET_COUNT} from '../../graphQL/queries'\n\nimport { ProgramContainer, ResultsHeader} from './HomePage.styles'\n\ntype HomePageProps = {\n  getInitialProps: Function\n}\n\ninterface HomePageInterface<HomePageProps> extends React.FC<HomePageProps> {\n  getInitialProps?: (ctx: any) => Promise<any>\n}\n\nconst HomePage: HomePageInterface<HomePageProps> = () => {\n\n\n  return (\n    <Layout>\n    <Header />\n    <FilterMenu />\n    <ProgramContainer>\n        <ResultsHeader>300 programs found for engineering!</ResultsHeader>\n        <ProgramRow />\n        <ProgramRow />\n        <ProgramRow />\n        <ProgramRow />\n        <ProgramRow />\n        <ProgramRow />\n        <ProgramRow />\n        <ProgramRow />\n        <ProgramRow />\n        <ProgramRow />\n    </ProgramContainer>\n    <BottomBar/>\n  </Layout>\n  )\n}\n\nconst getQuery = (QUERY, params?) => new Promise(async (res, rej)=> {\n  const data:any = await axios({\n    url: \"http://localhost:4000/gql\",\n    method: \"post\",\n    data: {\n      query: GET_COUNT\n    }\n  })\n  res(data)\n})\n\nHomePage.getInitialProps = async(ctx) => {\n  \n  let resp:{data:{data:{programsCount: number}}} = await getQuery(GET_COUNT)\n\n  console.log(resp.data.data.programsCount)\n\n  return {}\n}\n\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}