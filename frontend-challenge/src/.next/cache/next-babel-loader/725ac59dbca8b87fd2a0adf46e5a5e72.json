{"ast":null,"code":"var __jsx = React.createElement;\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/styles';\nimport BaseApp from 'next/app';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport withApolloClient from '../hocs/withApolloClient';\nimport configureStore from '../redux/configureStore';\nimport { theme, GlobalStyle } from '../theme/themes/base';\nimport muiTheme from '../theme/themes/muiTheme';\n\nclass App extends BaseApp {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      apolloClient,\n      store\n    } = this.props;\n    return __jsx(ApolloProvider, {\n      client: apolloClient\n    }, __jsx(Provider, {\n      store: store\n    }, __jsx(MuiThemeProvider, {\n      theme: muiTheme\n    }, __jsx(ThemeProvider, {\n      theme: theme\n    }, __jsx(\"div\", null, __jsx(GlobalStyle, null), __jsx(Component, pageProps))))));\n  }\n\n}\n\nexport default withApolloClient(configureStore(App));","map":null,"metadata":{},"sourceType":"module"}